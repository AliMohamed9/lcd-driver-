
own_driver_of_lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002652  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002652  000026c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000015cc  00000000  00000000  000026d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000077a  00000000  00000000  00003c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004416  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004556  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000046c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000630f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000071fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008108  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008395  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008b63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e5       	ldi	r30, 0x52	; 82
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 27 13 	jmp	0x264e	; 0x264e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 f0 12 	jmp	0x25e0	; 0x25e0 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 0c 13 	jmp	0x2618	; 0x2618 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 18 13 	jmp	0x2630	; 0x2630 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 18 13 	jmp	0x2630	; 0x2630 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 f0 12 	jmp	0x25e0	; 0x25e0 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 0c 13 	jmp	0x2618	; 0x2618 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 18 13 	jmp	0x2630	; 0x2630 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 18 13 	jmp	0x2630	; 0x2630 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 18 13 	jmp	0x2630	; 0x2630 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 00 13 	jmp	0x2600	; 0x2600 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 1c 13 	jmp	0x2638	; 0x2638 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:

#include<avr/io.h>
#include<util/delay.h>

int main()
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62

	LCD_init();
     b3e:	0e 94 ae 05 	call	0xb5c	; 0xb5c <LCD_init>
	LCD_send_one_letter('A',2,12);
     b42:	81 e4       	ldi	r24, 0x41	; 65
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	62 e0       	ldi	r22, 0x02	; 2
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	4c e0       	ldi	r20, 0x0C	; 12
     b4c:	50 e0       	ldi	r21, 0x00	; 0
     b4e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <LCD_send_one_letter>

	return 0;
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	90 e0       	ldi	r25, 0x00	; 0
}
     b56:	cf 91       	pop	r28
     b58:	df 91       	pop	r29
     b5a:	08 95       	ret

00000b5c <LCD_init>:
#include<util/delay.h>
#include"own_lcd.h"


void LCD_init()
{
     b5c:	0f 93       	push	r16
     b5e:	1f 93       	push	r17
     b60:	df 93       	push	r29
     b62:	cf 93       	push	r28
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	c4 55       	subi	r28, 0x54	; 84
     b6a:	d0 40       	sbci	r29, 0x00	; 0
     b6c:	0f b6       	in	r0, 0x3f	; 63
     b6e:	f8 94       	cli
     b70:	de bf       	out	0x3e, r29	; 62
     b72:	0f be       	out	0x3f, r0	; 63
     b74:	cd bf       	out	0x3d, r28	; 61

		DDRC|=(1<<7);
     b76:	a4 e3       	ldi	r26, 0x34	; 52
     b78:	b0 e0       	ldi	r27, 0x00	; 0
     b7a:	e4 e3       	ldi	r30, 0x34	; 52
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	80 81       	ld	r24, Z
     b80:	80 68       	ori	r24, 0x80	; 128
     b82:	8c 93       	st	X, r24
		DDRC|=(1<<6);
     b84:	a4 e3       	ldi	r26, 0x34	; 52
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	e4 e3       	ldi	r30, 0x34	; 52
     b8a:	f0 e0       	ldi	r31, 0x00	; 0
     b8c:	80 81       	ld	r24, Z
     b8e:	80 64       	ori	r24, 0x40	; 64
     b90:	8c 93       	st	X, r24
		PORTC&=~(1<<6);
     b92:	a5 e3       	ldi	r26, 0x35	; 53
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	e5 e3       	ldi	r30, 0x35	; 53
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	80 81       	ld	r24, Z
     b9c:	8f 7b       	andi	r24, 0xBF	; 191
     b9e:	8c 93       	st	X, r24
#if lcd_4_bit_mode
		DDRB=0b11110000;
     ba0:	e7 e3       	ldi	r30, 0x37	; 55
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	80 ef       	ldi	r24, 0xF0	; 240
     ba6:	80 83       	st	Z, r24
	    LCD_send_command(0x28);
     ba8:	88 e2       	ldi	r24, 0x28	; 40
     baa:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
     bae:	fe 01       	movw	r30, r28
     bb0:	ef 5a       	subi	r30, 0xAF	; 175
     bb2:	ff 4f       	sbci	r31, 0xFF	; 255
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	a0 ea       	ldi	r26, 0xA0	; 160
     bba:	b0 e4       	ldi	r27, 0x40	; 64
     bbc:	80 83       	st	Z, r24
     bbe:	91 83       	std	Z+1, r25	; 0x01
     bc0:	a2 83       	std	Z+2, r26	; 0x02
     bc2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bc4:	8e 01       	movw	r16, r28
     bc6:	03 5b       	subi	r16, 0xB3	; 179
     bc8:	1f 4f       	sbci	r17, 0xFF	; 255
     bca:	fe 01       	movw	r30, r28
     bcc:	ef 5a       	subi	r30, 0xAF	; 175
     bce:	ff 4f       	sbci	r31, 0xFF	; 255
     bd0:	60 81       	ld	r22, Z
     bd2:	71 81       	ldd	r23, Z+1	; 0x01
     bd4:	82 81       	ldd	r24, Z+2	; 0x02
     bd6:	93 81       	ldd	r25, Z+3	; 0x03
     bd8:	20 e0       	ldi	r18, 0x00	; 0
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	48 e4       	ldi	r20, 0x48	; 72
     bde:	53 e4       	ldi	r21, 0x43	; 67
     be0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     be4:	dc 01       	movw	r26, r24
     be6:	cb 01       	movw	r24, r22
     be8:	f8 01       	movw	r30, r16
     bea:	80 83       	st	Z, r24
     bec:	91 83       	std	Z+1, r25	; 0x01
     bee:	a2 83       	std	Z+2, r26	; 0x02
     bf0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bf2:	fe 01       	movw	r30, r28
     bf4:	e3 5b       	subi	r30, 0xB3	; 179
     bf6:	ff 4f       	sbci	r31, 0xFF	; 255
     bf8:	60 81       	ld	r22, Z
     bfa:	71 81       	ldd	r23, Z+1	; 0x01
     bfc:	82 81       	ldd	r24, Z+2	; 0x02
     bfe:	93 81       	ldd	r25, Z+3	; 0x03
     c00:	20 e0       	ldi	r18, 0x00	; 0
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	40 e8       	ldi	r20, 0x80	; 128
     c06:	5f e3       	ldi	r21, 0x3F	; 63
     c08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     c0c:	88 23       	and	r24, r24
     c0e:	44 f4       	brge	.+16     	; 0xc20 <LCD_init+0xc4>
		__ticks = 1;
     c10:	fe 01       	movw	r30, r28
     c12:	e5 5b       	subi	r30, 0xB5	; 181
     c14:	ff 4f       	sbci	r31, 0xFF	; 255
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	91 83       	std	Z+1, r25	; 0x01
     c1c:	80 83       	st	Z, r24
     c1e:	64 c0       	rjmp	.+200    	; 0xce8 <LCD_init+0x18c>
	else if (__tmp > 65535)
     c20:	fe 01       	movw	r30, r28
     c22:	e3 5b       	subi	r30, 0xB3	; 179
     c24:	ff 4f       	sbci	r31, 0xFF	; 255
     c26:	60 81       	ld	r22, Z
     c28:	71 81       	ldd	r23, Z+1	; 0x01
     c2a:	82 81       	ldd	r24, Z+2	; 0x02
     c2c:	93 81       	ldd	r25, Z+3	; 0x03
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	3f ef       	ldi	r19, 0xFF	; 255
     c32:	4f e7       	ldi	r20, 0x7F	; 127
     c34:	57 e4       	ldi	r21, 0x47	; 71
     c36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     c3a:	18 16       	cp	r1, r24
     c3c:	0c f0       	brlt	.+2      	; 0xc40 <LCD_init+0xe4>
     c3e:	43 c0       	rjmp	.+134    	; 0xcc6 <LCD_init+0x16a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c40:	fe 01       	movw	r30, r28
     c42:	ef 5a       	subi	r30, 0xAF	; 175
     c44:	ff 4f       	sbci	r31, 0xFF	; 255
     c46:	60 81       	ld	r22, Z
     c48:	71 81       	ldd	r23, Z+1	; 0x01
     c4a:	82 81       	ldd	r24, Z+2	; 0x02
     c4c:	93 81       	ldd	r25, Z+3	; 0x03
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	40 e2       	ldi	r20, 0x20	; 32
     c54:	51 e4       	ldi	r21, 0x41	; 65
     c56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c5a:	dc 01       	movw	r26, r24
     c5c:	cb 01       	movw	r24, r22
     c5e:	8e 01       	movw	r16, r28
     c60:	05 5b       	subi	r16, 0xB5	; 181
     c62:	1f 4f       	sbci	r17, 0xFF	; 255
     c64:	bc 01       	movw	r22, r24
     c66:	cd 01       	movw	r24, r26
     c68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c6c:	dc 01       	movw	r26, r24
     c6e:	cb 01       	movw	r24, r22
     c70:	f8 01       	movw	r30, r16
     c72:	91 83       	std	Z+1, r25	; 0x01
     c74:	80 83       	st	Z, r24
     c76:	1f c0       	rjmp	.+62     	; 0xcb6 <LCD_init+0x15a>
     c78:	fe 01       	movw	r30, r28
     c7a:	e7 5b       	subi	r30, 0xB7	; 183
     c7c:	ff 4f       	sbci	r31, 0xFF	; 255
     c7e:	84 e1       	ldi	r24, 0x14	; 20
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	91 83       	std	Z+1, r25	; 0x01
     c84:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c86:	fe 01       	movw	r30, r28
     c88:	e7 5b       	subi	r30, 0xB7	; 183
     c8a:	ff 4f       	sbci	r31, 0xFF	; 255
     c8c:	80 81       	ld	r24, Z
     c8e:	91 81       	ldd	r25, Z+1	; 0x01
     c90:	01 97       	sbiw	r24, 0x01	; 1
     c92:	f1 f7       	brne	.-4      	; 0xc90 <LCD_init+0x134>
     c94:	fe 01       	movw	r30, r28
     c96:	e7 5b       	subi	r30, 0xB7	; 183
     c98:	ff 4f       	sbci	r31, 0xFF	; 255
     c9a:	91 83       	std	Z+1, r25	; 0x01
     c9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c9e:	de 01       	movw	r26, r28
     ca0:	a5 5b       	subi	r26, 0xB5	; 181
     ca2:	bf 4f       	sbci	r27, 0xFF	; 255
     ca4:	fe 01       	movw	r30, r28
     ca6:	e5 5b       	subi	r30, 0xB5	; 181
     ca8:	ff 4f       	sbci	r31, 0xFF	; 255
     caa:	80 81       	ld	r24, Z
     cac:	91 81       	ldd	r25, Z+1	; 0x01
     cae:	01 97       	sbiw	r24, 0x01	; 1
     cb0:	11 96       	adiw	r26, 0x01	; 1
     cb2:	9c 93       	st	X, r25
     cb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cb6:	fe 01       	movw	r30, r28
     cb8:	e5 5b       	subi	r30, 0xB5	; 181
     cba:	ff 4f       	sbci	r31, 0xFF	; 255
     cbc:	80 81       	ld	r24, Z
     cbe:	91 81       	ldd	r25, Z+1	; 0x01
     cc0:	00 97       	sbiw	r24, 0x00	; 0
     cc2:	d1 f6       	brne	.-76     	; 0xc78 <LCD_init+0x11c>
     cc4:	27 c0       	rjmp	.+78     	; 0xd14 <LCD_init+0x1b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cc6:	8e 01       	movw	r16, r28
     cc8:	05 5b       	subi	r16, 0xB5	; 181
     cca:	1f 4f       	sbci	r17, 0xFF	; 255
     ccc:	fe 01       	movw	r30, r28
     cce:	e3 5b       	subi	r30, 0xB3	; 179
     cd0:	ff 4f       	sbci	r31, 0xFF	; 255
     cd2:	60 81       	ld	r22, Z
     cd4:	71 81       	ldd	r23, Z+1	; 0x01
     cd6:	82 81       	ldd	r24, Z+2	; 0x02
     cd8:	93 81       	ldd	r25, Z+3	; 0x03
     cda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     cde:	dc 01       	movw	r26, r24
     ce0:	cb 01       	movw	r24, r22
     ce2:	f8 01       	movw	r30, r16
     ce4:	91 83       	std	Z+1, r25	; 0x01
     ce6:	80 83       	st	Z, r24
     ce8:	de 01       	movw	r26, r28
     cea:	a9 5b       	subi	r26, 0xB9	; 185
     cec:	bf 4f       	sbci	r27, 0xFF	; 255
     cee:	fe 01       	movw	r30, r28
     cf0:	e5 5b       	subi	r30, 0xB5	; 181
     cf2:	ff 4f       	sbci	r31, 0xFF	; 255
     cf4:	80 81       	ld	r24, Z
     cf6:	91 81       	ldd	r25, Z+1	; 0x01
     cf8:	8d 93       	st	X+, r24
     cfa:	9c 93       	st	X, r25
     cfc:	fe 01       	movw	r30, r28
     cfe:	e9 5b       	subi	r30, 0xB9	; 185
     d00:	ff 4f       	sbci	r31, 0xFF	; 255
     d02:	80 81       	ld	r24, Z
     d04:	91 81       	ldd	r25, Z+1	; 0x01
     d06:	01 97       	sbiw	r24, 0x01	; 1
     d08:	f1 f7       	brne	.-4      	; 0xd06 <LCD_init+0x1aa>
     d0a:	fe 01       	movw	r30, r28
     d0c:	e9 5b       	subi	r30, 0xB9	; 185
     d0e:	ff 4f       	sbci	r31, 0xFF	; 255
     d10:	91 83       	std	Z+1, r25	; 0x01
     d12:	80 83       	st	Z, r24

#endif

#if display_mode_on

	LCD_send_command(0x0c);
     d14:	8c e0       	ldi	r24, 0x0C	; 12
     d16:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
     d1a:	fe 01       	movw	r30, r28
     d1c:	ed 5b       	subi	r30, 0xBD	; 189
     d1e:	ff 4f       	sbci	r31, 0xFF	; 255
     d20:	80 e0       	ldi	r24, 0x00	; 0
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	a0 ea       	ldi	r26, 0xA0	; 160
     d26:	b0 e4       	ldi	r27, 0x40	; 64
     d28:	80 83       	st	Z, r24
     d2a:	91 83       	std	Z+1, r25	; 0x01
     d2c:	a2 83       	std	Z+2, r26	; 0x02
     d2e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d30:	8e 01       	movw	r16, r28
     d32:	01 5c       	subi	r16, 0xC1	; 193
     d34:	1f 4f       	sbci	r17, 0xFF	; 255
     d36:	fe 01       	movw	r30, r28
     d38:	ed 5b       	subi	r30, 0xBD	; 189
     d3a:	ff 4f       	sbci	r31, 0xFF	; 255
     d3c:	60 81       	ld	r22, Z
     d3e:	71 81       	ldd	r23, Z+1	; 0x01
     d40:	82 81       	ldd	r24, Z+2	; 0x02
     d42:	93 81       	ldd	r25, Z+3	; 0x03
     d44:	20 e0       	ldi	r18, 0x00	; 0
     d46:	30 e0       	ldi	r19, 0x00	; 0
     d48:	48 e4       	ldi	r20, 0x48	; 72
     d4a:	53 e4       	ldi	r21, 0x43	; 67
     d4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d50:	dc 01       	movw	r26, r24
     d52:	cb 01       	movw	r24, r22
     d54:	f8 01       	movw	r30, r16
     d56:	80 83       	st	Z, r24
     d58:	91 83       	std	Z+1, r25	; 0x01
     d5a:	a2 83       	std	Z+2, r26	; 0x02
     d5c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d5e:	fe 01       	movw	r30, r28
     d60:	ff 96       	adiw	r30, 0x3f	; 63
     d62:	60 81       	ld	r22, Z
     d64:	71 81       	ldd	r23, Z+1	; 0x01
     d66:	82 81       	ldd	r24, Z+2	; 0x02
     d68:	93 81       	ldd	r25, Z+3	; 0x03
     d6a:	20 e0       	ldi	r18, 0x00	; 0
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	40 e8       	ldi	r20, 0x80	; 128
     d70:	5f e3       	ldi	r21, 0x3F	; 63
     d72:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d76:	88 23       	and	r24, r24
     d78:	2c f4       	brge	.+10     	; 0xd84 <LCD_init+0x228>
		__ticks = 1;
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	9e af       	std	Y+62, r25	; 0x3e
     d80:	8d af       	std	Y+61, r24	; 0x3d
     d82:	46 c0       	rjmp	.+140    	; 0xe10 <LCD_init+0x2b4>
	else if (__tmp > 65535)
     d84:	fe 01       	movw	r30, r28
     d86:	ff 96       	adiw	r30, 0x3f	; 63
     d88:	60 81       	ld	r22, Z
     d8a:	71 81       	ldd	r23, Z+1	; 0x01
     d8c:	82 81       	ldd	r24, Z+2	; 0x02
     d8e:	93 81       	ldd	r25, Z+3	; 0x03
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	3f ef       	ldi	r19, 0xFF	; 255
     d94:	4f e7       	ldi	r20, 0x7F	; 127
     d96:	57 e4       	ldi	r21, 0x47	; 71
     d98:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d9c:	18 16       	cp	r1, r24
     d9e:	64 f5       	brge	.+88     	; 0xdf8 <LCD_init+0x29c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     da0:	fe 01       	movw	r30, r28
     da2:	ed 5b       	subi	r30, 0xBD	; 189
     da4:	ff 4f       	sbci	r31, 0xFF	; 255
     da6:	60 81       	ld	r22, Z
     da8:	71 81       	ldd	r23, Z+1	; 0x01
     daa:	82 81       	ldd	r24, Z+2	; 0x02
     dac:	93 81       	ldd	r25, Z+3	; 0x03
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	40 e2       	ldi	r20, 0x20	; 32
     db4:	51 e4       	ldi	r21, 0x41	; 65
     db6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     dba:	dc 01       	movw	r26, r24
     dbc:	cb 01       	movw	r24, r22
     dbe:	bc 01       	movw	r22, r24
     dc0:	cd 01       	movw	r24, r26
     dc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dc6:	dc 01       	movw	r26, r24
     dc8:	cb 01       	movw	r24, r22
     dca:	9e af       	std	Y+62, r25	; 0x3e
     dcc:	8d af       	std	Y+61, r24	; 0x3d
     dce:	0f c0       	rjmp	.+30     	; 0xdee <LCD_init+0x292>
     dd0:	84 e1       	ldi	r24, 0x14	; 20
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	9c af       	std	Y+60, r25	; 0x3c
     dd6:	8b af       	std	Y+59, r24	; 0x3b
     dd8:	8b ad       	ldd	r24, Y+59	; 0x3b
     dda:	9c ad       	ldd	r25, Y+60	; 0x3c
     ddc:	01 97       	sbiw	r24, 0x01	; 1
     dde:	f1 f7       	brne	.-4      	; 0xddc <LCD_init+0x280>
     de0:	9c af       	std	Y+60, r25	; 0x3c
     de2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     de4:	8d ad       	ldd	r24, Y+61	; 0x3d
     de6:	9e ad       	ldd	r25, Y+62	; 0x3e
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	9e af       	std	Y+62, r25	; 0x3e
     dec:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dee:	8d ad       	ldd	r24, Y+61	; 0x3d
     df0:	9e ad       	ldd	r25, Y+62	; 0x3e
     df2:	00 97       	sbiw	r24, 0x00	; 0
     df4:	69 f7       	brne	.-38     	; 0xdd0 <LCD_init+0x274>
     df6:	16 c0       	rjmp	.+44     	; 0xe24 <LCD_init+0x2c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     df8:	fe 01       	movw	r30, r28
     dfa:	ff 96       	adiw	r30, 0x3f	; 63
     dfc:	60 81       	ld	r22, Z
     dfe:	71 81       	ldd	r23, Z+1	; 0x01
     e00:	82 81       	ldd	r24, Z+2	; 0x02
     e02:	93 81       	ldd	r25, Z+3	; 0x03
     e04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e08:	dc 01       	movw	r26, r24
     e0a:	cb 01       	movw	r24, r22
     e0c:	9e af       	std	Y+62, r25	; 0x3e
     e0e:	8d af       	std	Y+61, r24	; 0x3d
     e10:	8d ad       	ldd	r24, Y+61	; 0x3d
     e12:	9e ad       	ldd	r25, Y+62	; 0x3e
     e14:	9a af       	std	Y+58, r25	; 0x3a
     e16:	89 af       	std	Y+57, r24	; 0x39
     e18:	89 ad       	ldd	r24, Y+57	; 0x39
     e1a:	9a ad       	ldd	r25, Y+58	; 0x3a
     e1c:	01 97       	sbiw	r24, 0x01	; 1
     e1e:	f1 f7       	brne	.-4      	; 0xe1c <LCD_init+0x2c0>
     e20:	9a af       	std	Y+58, r25	; 0x3a
     e22:	89 af       	std	Y+57, r24	; 0x39

#endif


#if cursor_mode_on
	LCD_send_command(0x0e);
     e24:	8e e0       	ldi	r24, 0x0E	; 14
     e26:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	a0 ea       	ldi	r26, 0xA0	; 160
     e30:	b0 e4       	ldi	r27, 0x40	; 64
     e32:	8d ab       	std	Y+53, r24	; 0x35
     e34:	9e ab       	std	Y+54, r25	; 0x36
     e36:	af ab       	std	Y+55, r26	; 0x37
     e38:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e3a:	6d a9       	ldd	r22, Y+53	; 0x35
     e3c:	7e a9       	ldd	r23, Y+54	; 0x36
     e3e:	8f a9       	ldd	r24, Y+55	; 0x37
     e40:	98 ad       	ldd	r25, Y+56	; 0x38
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	48 e4       	ldi	r20, 0x48	; 72
     e48:	53 e4       	ldi	r21, 0x43	; 67
     e4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e4e:	dc 01       	movw	r26, r24
     e50:	cb 01       	movw	r24, r22
     e52:	89 ab       	std	Y+49, r24	; 0x31
     e54:	9a ab       	std	Y+50, r25	; 0x32
     e56:	ab ab       	std	Y+51, r26	; 0x33
     e58:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     e5a:	69 a9       	ldd	r22, Y+49	; 0x31
     e5c:	7a a9       	ldd	r23, Y+50	; 0x32
     e5e:	8b a9       	ldd	r24, Y+51	; 0x33
     e60:	9c a9       	ldd	r25, Y+52	; 0x34
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	40 e8       	ldi	r20, 0x80	; 128
     e68:	5f e3       	ldi	r21, 0x3F	; 63
     e6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e6e:	88 23       	and	r24, r24
     e70:	2c f4       	brge	.+10     	; 0xe7c <LCD_init+0x320>
		__ticks = 1;
     e72:	81 e0       	ldi	r24, 0x01	; 1
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	98 ab       	std	Y+48, r25	; 0x30
     e78:	8f a7       	std	Y+47, r24	; 0x2f
     e7a:	3f c0       	rjmp	.+126    	; 0xefa <LCD_init+0x39e>
	else if (__tmp > 65535)
     e7c:	69 a9       	ldd	r22, Y+49	; 0x31
     e7e:	7a a9       	ldd	r23, Y+50	; 0x32
     e80:	8b a9       	ldd	r24, Y+51	; 0x33
     e82:	9c a9       	ldd	r25, Y+52	; 0x34
     e84:	20 e0       	ldi	r18, 0x00	; 0
     e86:	3f ef       	ldi	r19, 0xFF	; 255
     e88:	4f e7       	ldi	r20, 0x7F	; 127
     e8a:	57 e4       	ldi	r21, 0x47	; 71
     e8c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e90:	18 16       	cp	r1, r24
     e92:	4c f5       	brge	.+82     	; 0xee6 <LCD_init+0x38a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e94:	6d a9       	ldd	r22, Y+53	; 0x35
     e96:	7e a9       	ldd	r23, Y+54	; 0x36
     e98:	8f a9       	ldd	r24, Y+55	; 0x37
     e9a:	98 ad       	ldd	r25, Y+56	; 0x38
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	40 e2       	ldi	r20, 0x20	; 32
     ea2:	51 e4       	ldi	r21, 0x41	; 65
     ea4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ea8:	dc 01       	movw	r26, r24
     eaa:	cb 01       	movw	r24, r22
     eac:	bc 01       	movw	r22, r24
     eae:	cd 01       	movw	r24, r26
     eb0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     eb4:	dc 01       	movw	r26, r24
     eb6:	cb 01       	movw	r24, r22
     eb8:	98 ab       	std	Y+48, r25	; 0x30
     eba:	8f a7       	std	Y+47, r24	; 0x2f
     ebc:	0f c0       	rjmp	.+30     	; 0xedc <LCD_init+0x380>
     ebe:	84 e1       	ldi	r24, 0x14	; 20
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	9e a7       	std	Y+46, r25	; 0x2e
     ec4:	8d a7       	std	Y+45, r24	; 0x2d
     ec6:	8d a5       	ldd	r24, Y+45	; 0x2d
     ec8:	9e a5       	ldd	r25, Y+46	; 0x2e
     eca:	01 97       	sbiw	r24, 0x01	; 1
     ecc:	f1 f7       	brne	.-4      	; 0xeca <LCD_init+0x36e>
     ece:	9e a7       	std	Y+46, r25	; 0x2e
     ed0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ed2:	8f a5       	ldd	r24, Y+47	; 0x2f
     ed4:	98 a9       	ldd	r25, Y+48	; 0x30
     ed6:	01 97       	sbiw	r24, 0x01	; 1
     ed8:	98 ab       	std	Y+48, r25	; 0x30
     eda:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     edc:	8f a5       	ldd	r24, Y+47	; 0x2f
     ede:	98 a9       	ldd	r25, Y+48	; 0x30
     ee0:	00 97       	sbiw	r24, 0x00	; 0
     ee2:	69 f7       	brne	.-38     	; 0xebe <LCD_init+0x362>
     ee4:	14 c0       	rjmp	.+40     	; 0xf0e <LCD_init+0x3b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ee6:	69 a9       	ldd	r22, Y+49	; 0x31
     ee8:	7a a9       	ldd	r23, Y+50	; 0x32
     eea:	8b a9       	ldd	r24, Y+51	; 0x33
     eec:	9c a9       	ldd	r25, Y+52	; 0x34
     eee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ef2:	dc 01       	movw	r26, r24
     ef4:	cb 01       	movw	r24, r22
     ef6:	98 ab       	std	Y+48, r25	; 0x30
     ef8:	8f a7       	std	Y+47, r24	; 0x2f
     efa:	8f a5       	ldd	r24, Y+47	; 0x2f
     efc:	98 a9       	ldd	r25, Y+48	; 0x30
     efe:	9c a7       	std	Y+44, r25	; 0x2c
     f00:	8b a7       	std	Y+43, r24	; 0x2b
     f02:	8b a5       	ldd	r24, Y+43	; 0x2b
     f04:	9c a5       	ldd	r25, Y+44	; 0x2c
     f06:	01 97       	sbiw	r24, 0x01	; 1
     f08:	f1 f7       	brne	.-4      	; 0xf06 <LCD_init+0x3aa>
     f0a:	9c a7       	std	Y+44, r25	; 0x2c
     f0c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(5);

#endif

#if  cursor_blink_mode_on
	LCD_send_command(0x0f);
     f0e:	8f e0       	ldi	r24, 0x0F	; 15
     f10:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
     f14:	80 e0       	ldi	r24, 0x00	; 0
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	a0 ea       	ldi	r26, 0xA0	; 160
     f1a:	b0 e4       	ldi	r27, 0x40	; 64
     f1c:	8f a3       	std	Y+39, r24	; 0x27
     f1e:	98 a7       	std	Y+40, r25	; 0x28
     f20:	a9 a7       	std	Y+41, r26	; 0x29
     f22:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f24:	6f a1       	ldd	r22, Y+39	; 0x27
     f26:	78 a5       	ldd	r23, Y+40	; 0x28
     f28:	89 a5       	ldd	r24, Y+41	; 0x29
     f2a:	9a a5       	ldd	r25, Y+42	; 0x2a
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	48 e4       	ldi	r20, 0x48	; 72
     f32:	53 e4       	ldi	r21, 0x43	; 67
     f34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f38:	dc 01       	movw	r26, r24
     f3a:	cb 01       	movw	r24, r22
     f3c:	8b a3       	std	Y+35, r24	; 0x23
     f3e:	9c a3       	std	Y+36, r25	; 0x24
     f40:	ad a3       	std	Y+37, r26	; 0x25
     f42:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     f44:	6b a1       	ldd	r22, Y+35	; 0x23
     f46:	7c a1       	ldd	r23, Y+36	; 0x24
     f48:	8d a1       	ldd	r24, Y+37	; 0x25
     f4a:	9e a1       	ldd	r25, Y+38	; 0x26
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	40 e8       	ldi	r20, 0x80	; 128
     f52:	5f e3       	ldi	r21, 0x3F	; 63
     f54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f58:	88 23       	and	r24, r24
     f5a:	2c f4       	brge	.+10     	; 0xf66 <LCD_init+0x40a>
		__ticks = 1;
     f5c:	81 e0       	ldi	r24, 0x01	; 1
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	9a a3       	std	Y+34, r25	; 0x22
     f62:	89 a3       	std	Y+33, r24	; 0x21
     f64:	3f c0       	rjmp	.+126    	; 0xfe4 <LCD_init+0x488>
	else if (__tmp > 65535)
     f66:	6b a1       	ldd	r22, Y+35	; 0x23
     f68:	7c a1       	ldd	r23, Y+36	; 0x24
     f6a:	8d a1       	ldd	r24, Y+37	; 0x25
     f6c:	9e a1       	ldd	r25, Y+38	; 0x26
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	3f ef       	ldi	r19, 0xFF	; 255
     f72:	4f e7       	ldi	r20, 0x7F	; 127
     f74:	57 e4       	ldi	r21, 0x47	; 71
     f76:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f7a:	18 16       	cp	r1, r24
     f7c:	4c f5       	brge	.+82     	; 0xfd0 <LCD_init+0x474>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f7e:	6f a1       	ldd	r22, Y+39	; 0x27
     f80:	78 a5       	ldd	r23, Y+40	; 0x28
     f82:	89 a5       	ldd	r24, Y+41	; 0x29
     f84:	9a a5       	ldd	r25, Y+42	; 0x2a
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	40 e2       	ldi	r20, 0x20	; 32
     f8c:	51 e4       	ldi	r21, 0x41	; 65
     f8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f92:	dc 01       	movw	r26, r24
     f94:	cb 01       	movw	r24, r22
     f96:	bc 01       	movw	r22, r24
     f98:	cd 01       	movw	r24, r26
     f9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	9a a3       	std	Y+34, r25	; 0x22
     fa4:	89 a3       	std	Y+33, r24	; 0x21
     fa6:	0f c0       	rjmp	.+30     	; 0xfc6 <LCD_init+0x46a>
     fa8:	84 e1       	ldi	r24, 0x14	; 20
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	98 a3       	std	Y+32, r25	; 0x20
     fae:	8f 8f       	std	Y+31, r24	; 0x1f
     fb0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     fb2:	98 a1       	ldd	r25, Y+32	; 0x20
     fb4:	01 97       	sbiw	r24, 0x01	; 1
     fb6:	f1 f7       	brne	.-4      	; 0xfb4 <LCD_init+0x458>
     fb8:	98 a3       	std	Y+32, r25	; 0x20
     fba:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fbc:	89 a1       	ldd	r24, Y+33	; 0x21
     fbe:	9a a1       	ldd	r25, Y+34	; 0x22
     fc0:	01 97       	sbiw	r24, 0x01	; 1
     fc2:	9a a3       	std	Y+34, r25	; 0x22
     fc4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fc6:	89 a1       	ldd	r24, Y+33	; 0x21
     fc8:	9a a1       	ldd	r25, Y+34	; 0x22
     fca:	00 97       	sbiw	r24, 0x00	; 0
     fcc:	69 f7       	brne	.-38     	; 0xfa8 <LCD_init+0x44c>
     fce:	14 c0       	rjmp	.+40     	; 0xff8 <LCD_init+0x49c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fd0:	6b a1       	ldd	r22, Y+35	; 0x23
     fd2:	7c a1       	ldd	r23, Y+36	; 0x24
     fd4:	8d a1       	ldd	r24, Y+37	; 0x25
     fd6:	9e a1       	ldd	r25, Y+38	; 0x26
     fd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fdc:	dc 01       	movw	r26, r24
     fde:	cb 01       	movw	r24, r22
     fe0:	9a a3       	std	Y+34, r25	; 0x22
     fe2:	89 a3       	std	Y+33, r24	; 0x21
     fe4:	89 a1       	ldd	r24, Y+33	; 0x21
     fe6:	9a a1       	ldd	r25, Y+34	; 0x22
     fe8:	9e 8f       	std	Y+30, r25	; 0x1e
     fea:	8d 8f       	std	Y+29, r24	; 0x1d
     fec:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fee:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ff0:	01 97       	sbiw	r24, 0x01	; 1
     ff2:	f1 f7       	brne	.-4      	; 0xff0 <LCD_init+0x494>
     ff4:	9e 8f       	std	Y+30, r25	; 0x1e
     ff6:	8d 8f       	std	Y+29, r24	; 0x1d
	LCD_send_command(0x0e);
	_delay_ms(5);
#endif


	LCD_send_command(0x06);     /////shift
     ff8:	86 e0       	ldi	r24, 0x06	; 6
     ffa:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	a0 ea       	ldi	r26, 0xA0	; 160
    1004:	b0 e4       	ldi	r27, 0x40	; 64
    1006:	89 8f       	std	Y+25, r24	; 0x19
    1008:	9a 8f       	std	Y+26, r25	; 0x1a
    100a:	ab 8f       	std	Y+27, r26	; 0x1b
    100c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    100e:	69 8d       	ldd	r22, Y+25	; 0x19
    1010:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1012:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1014:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1016:	20 e0       	ldi	r18, 0x00	; 0
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	48 e4       	ldi	r20, 0x48	; 72
    101c:	53 e4       	ldi	r21, 0x43	; 67
    101e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1022:	dc 01       	movw	r26, r24
    1024:	cb 01       	movw	r24, r22
    1026:	8d 8b       	std	Y+21, r24	; 0x15
    1028:	9e 8b       	std	Y+22, r25	; 0x16
    102a:	af 8b       	std	Y+23, r26	; 0x17
    102c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    102e:	6d 89       	ldd	r22, Y+21	; 0x15
    1030:	7e 89       	ldd	r23, Y+22	; 0x16
    1032:	8f 89       	ldd	r24, Y+23	; 0x17
    1034:	98 8d       	ldd	r25, Y+24	; 0x18
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	40 e8       	ldi	r20, 0x80	; 128
    103c:	5f e3       	ldi	r21, 0x3F	; 63
    103e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1042:	88 23       	and	r24, r24
    1044:	2c f4       	brge	.+10     	; 0x1050 <LCD_init+0x4f4>
		__ticks = 1;
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	9c 8b       	std	Y+20, r25	; 0x14
    104c:	8b 8b       	std	Y+19, r24	; 0x13
    104e:	3f c0       	rjmp	.+126    	; 0x10ce <LCD_init+0x572>
	else if (__tmp > 65535)
    1050:	6d 89       	ldd	r22, Y+21	; 0x15
    1052:	7e 89       	ldd	r23, Y+22	; 0x16
    1054:	8f 89       	ldd	r24, Y+23	; 0x17
    1056:	98 8d       	ldd	r25, Y+24	; 0x18
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	3f ef       	ldi	r19, 0xFF	; 255
    105c:	4f e7       	ldi	r20, 0x7F	; 127
    105e:	57 e4       	ldi	r21, 0x47	; 71
    1060:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1064:	18 16       	cp	r1, r24
    1066:	4c f5       	brge	.+82     	; 0x10ba <LCD_init+0x55e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1068:	69 8d       	ldd	r22, Y+25	; 0x19
    106a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    106c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    106e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	40 e2       	ldi	r20, 0x20	; 32
    1076:	51 e4       	ldi	r21, 0x41	; 65
    1078:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    107c:	dc 01       	movw	r26, r24
    107e:	cb 01       	movw	r24, r22
    1080:	bc 01       	movw	r22, r24
    1082:	cd 01       	movw	r24, r26
    1084:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1088:	dc 01       	movw	r26, r24
    108a:	cb 01       	movw	r24, r22
    108c:	9c 8b       	std	Y+20, r25	; 0x14
    108e:	8b 8b       	std	Y+19, r24	; 0x13
    1090:	0f c0       	rjmp	.+30     	; 0x10b0 <LCD_init+0x554>
    1092:	84 e1       	ldi	r24, 0x14	; 20
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	9a 8b       	std	Y+18, r25	; 0x12
    1098:	89 8b       	std	Y+17, r24	; 0x11
    109a:	89 89       	ldd	r24, Y+17	; 0x11
    109c:	9a 89       	ldd	r25, Y+18	; 0x12
    109e:	01 97       	sbiw	r24, 0x01	; 1
    10a0:	f1 f7       	brne	.-4      	; 0x109e <LCD_init+0x542>
    10a2:	9a 8b       	std	Y+18, r25	; 0x12
    10a4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10a6:	8b 89       	ldd	r24, Y+19	; 0x13
    10a8:	9c 89       	ldd	r25, Y+20	; 0x14
    10aa:	01 97       	sbiw	r24, 0x01	; 1
    10ac:	9c 8b       	std	Y+20, r25	; 0x14
    10ae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10b0:	8b 89       	ldd	r24, Y+19	; 0x13
    10b2:	9c 89       	ldd	r25, Y+20	; 0x14
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	69 f7       	brne	.-38     	; 0x1092 <LCD_init+0x536>
    10b8:	14 c0       	rjmp	.+40     	; 0x10e2 <LCD_init+0x586>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10ba:	6d 89       	ldd	r22, Y+21	; 0x15
    10bc:	7e 89       	ldd	r23, Y+22	; 0x16
    10be:	8f 89       	ldd	r24, Y+23	; 0x17
    10c0:	98 8d       	ldd	r25, Y+24	; 0x18
    10c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10c6:	dc 01       	movw	r26, r24
    10c8:	cb 01       	movw	r24, r22
    10ca:	9c 8b       	std	Y+20, r25	; 0x14
    10cc:	8b 8b       	std	Y+19, r24	; 0x13
    10ce:	8b 89       	ldd	r24, Y+19	; 0x13
    10d0:	9c 89       	ldd	r25, Y+20	; 0x14
    10d2:	98 8b       	std	Y+16, r25	; 0x10
    10d4:	8f 87       	std	Y+15, r24	; 0x0f
    10d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    10d8:	98 89       	ldd	r25, Y+16	; 0x10
    10da:	01 97       	sbiw	r24, 0x01	; 1
    10dc:	f1 f7       	brne	.-4      	; 0x10da <LCD_init+0x57e>
    10de:	98 8b       	std	Y+16, r25	; 0x10
    10e0:	8f 87       	std	Y+15, r24	; 0x0f
	PORTC&=~(1<<7);
	_delay_ms(1);
*/
	_delay_ms(5);

	LCD_send_command(0x01);   ////clear lcd
    10e2:	81 e0       	ldi	r24, 0x01	; 1
    10e4:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
    10e8:	80 e0       	ldi	r24, 0x00	; 0
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	a0 ea       	ldi	r26, 0xA0	; 160
    10ee:	b0 e4       	ldi	r27, 0x40	; 64
    10f0:	8b 87       	std	Y+11, r24	; 0x0b
    10f2:	9c 87       	std	Y+12, r25	; 0x0c
    10f4:	ad 87       	std	Y+13, r26	; 0x0d
    10f6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    10fa:	7c 85       	ldd	r23, Y+12	; 0x0c
    10fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    10fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1100:	20 e0       	ldi	r18, 0x00	; 0
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	48 e4       	ldi	r20, 0x48	; 72
    1106:	53 e4       	ldi	r21, 0x43	; 67
    1108:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    110c:	dc 01       	movw	r26, r24
    110e:	cb 01       	movw	r24, r22
    1110:	8f 83       	std	Y+7, r24	; 0x07
    1112:	98 87       	std	Y+8, r25	; 0x08
    1114:	a9 87       	std	Y+9, r26	; 0x09
    1116:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1118:	6f 81       	ldd	r22, Y+7	; 0x07
    111a:	78 85       	ldd	r23, Y+8	; 0x08
    111c:	89 85       	ldd	r24, Y+9	; 0x09
    111e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1120:	20 e0       	ldi	r18, 0x00	; 0
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	40 e8       	ldi	r20, 0x80	; 128
    1126:	5f e3       	ldi	r21, 0x3F	; 63
    1128:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    112c:	88 23       	and	r24, r24
    112e:	2c f4       	brge	.+10     	; 0x113a <LCD_init+0x5de>
		__ticks = 1;
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	9e 83       	std	Y+6, r25	; 0x06
    1136:	8d 83       	std	Y+5, r24	; 0x05
    1138:	3f c0       	rjmp	.+126    	; 0x11b8 <LCD_init+0x65c>
	else if (__tmp > 65535)
    113a:	6f 81       	ldd	r22, Y+7	; 0x07
    113c:	78 85       	ldd	r23, Y+8	; 0x08
    113e:	89 85       	ldd	r24, Y+9	; 0x09
    1140:	9a 85       	ldd	r25, Y+10	; 0x0a
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	3f ef       	ldi	r19, 0xFF	; 255
    1146:	4f e7       	ldi	r20, 0x7F	; 127
    1148:	57 e4       	ldi	r21, 0x47	; 71
    114a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    114e:	18 16       	cp	r1, r24
    1150:	4c f5       	brge	.+82     	; 0x11a4 <LCD_init+0x648>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1152:	6b 85       	ldd	r22, Y+11	; 0x0b
    1154:	7c 85       	ldd	r23, Y+12	; 0x0c
    1156:	8d 85       	ldd	r24, Y+13	; 0x0d
    1158:	9e 85       	ldd	r25, Y+14	; 0x0e
    115a:	20 e0       	ldi	r18, 0x00	; 0
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	40 e2       	ldi	r20, 0x20	; 32
    1160:	51 e4       	ldi	r21, 0x41	; 65
    1162:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1166:	dc 01       	movw	r26, r24
    1168:	cb 01       	movw	r24, r22
    116a:	bc 01       	movw	r22, r24
    116c:	cd 01       	movw	r24, r26
    116e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1172:	dc 01       	movw	r26, r24
    1174:	cb 01       	movw	r24, r22
    1176:	9e 83       	std	Y+6, r25	; 0x06
    1178:	8d 83       	std	Y+5, r24	; 0x05
    117a:	0f c0       	rjmp	.+30     	; 0x119a <LCD_init+0x63e>
    117c:	84 e1       	ldi	r24, 0x14	; 20
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	9c 83       	std	Y+4, r25	; 0x04
    1182:	8b 83       	std	Y+3, r24	; 0x03
    1184:	8b 81       	ldd	r24, Y+3	; 0x03
    1186:	9c 81       	ldd	r25, Y+4	; 0x04
    1188:	01 97       	sbiw	r24, 0x01	; 1
    118a:	f1 f7       	brne	.-4      	; 0x1188 <LCD_init+0x62c>
    118c:	9c 83       	std	Y+4, r25	; 0x04
    118e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1190:	8d 81       	ldd	r24, Y+5	; 0x05
    1192:	9e 81       	ldd	r25, Y+6	; 0x06
    1194:	01 97       	sbiw	r24, 0x01	; 1
    1196:	9e 83       	std	Y+6, r25	; 0x06
    1198:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    119a:	8d 81       	ldd	r24, Y+5	; 0x05
    119c:	9e 81       	ldd	r25, Y+6	; 0x06
    119e:	00 97       	sbiw	r24, 0x00	; 0
    11a0:	69 f7       	brne	.-38     	; 0x117c <LCD_init+0x620>
    11a2:	14 c0       	rjmp	.+40     	; 0x11cc <LCD_init+0x670>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11a4:	6f 81       	ldd	r22, Y+7	; 0x07
    11a6:	78 85       	ldd	r23, Y+8	; 0x08
    11a8:	89 85       	ldd	r24, Y+9	; 0x09
    11aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11b0:	dc 01       	movw	r26, r24
    11b2:	cb 01       	movw	r24, r22
    11b4:	9e 83       	std	Y+6, r25	; 0x06
    11b6:	8d 83       	std	Y+5, r24	; 0x05
    11b8:	8d 81       	ldd	r24, Y+5	; 0x05
    11ba:	9e 81       	ldd	r25, Y+6	; 0x06
    11bc:	9a 83       	std	Y+2, r25	; 0x02
    11be:	89 83       	std	Y+1, r24	; 0x01
    11c0:	89 81       	ldd	r24, Y+1	; 0x01
    11c2:	9a 81       	ldd	r25, Y+2	; 0x02
    11c4:	01 97       	sbiw	r24, 0x01	; 1
    11c6:	f1 f7       	brne	.-4      	; 0x11c4 <LCD_init+0x668>
    11c8:	9a 83       	std	Y+2, r25	; 0x02
    11ca:	89 83       	std	Y+1, r24	; 0x01
*/
	//_delay_ms(5);



}
    11cc:	cc 5a       	subi	r28, 0xAC	; 172
    11ce:	df 4f       	sbci	r29, 0xFF	; 255
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	de bf       	out	0x3e, r29	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	cd bf       	out	0x3d, r28	; 61
    11da:	cf 91       	pop	r28
    11dc:	df 91       	pop	r29
    11de:	1f 91       	pop	r17
    11e0:	0f 91       	pop	r16
    11e2:	08 95       	ret

000011e4 <LCD_send_command>:
void LCD_send_command(unsigned char command )
{
    11e4:	0f 93       	push	r16
    11e6:	1f 93       	push	r17
    11e8:	df 93       	push	r29
    11ea:	cf 93       	push	r28
    11ec:	cd b7       	in	r28, 0x3d	; 61
    11ee:	de b7       	in	r29, 0x3e	; 62
    11f0:	c7 54       	subi	r28, 0x47	; 71
    11f2:	d0 40       	sbci	r29, 0x00	; 0
    11f4:	0f b6       	in	r0, 0x3f	; 63
    11f6:	f8 94       	cli
    11f8:	de bf       	out	0x3e, r29	; 62
    11fa:	0f be       	out	0x3f, r0	; 63
    11fc:	cd bf       	out	0x3d, r28	; 61
    11fe:	fe 01       	movw	r30, r28
    1200:	e9 5b       	subi	r30, 0xB9	; 185
    1202:	ff 4f       	sbci	r31, 0xFF	; 255
    1204:	80 83       	st	Z, r24
   #if lcd_4_bit_mode

	PORTC&=~(1<<6);
    1206:	a5 e3       	ldi	r26, 0x35	; 53
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	e5 e3       	ldi	r30, 0x35	; 53
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	8f 7b       	andi	r24, 0xBF	; 191
    1212:	8c 93       	st	X, r24
	PORTB=(PORTB&0x0f)|(0xf0&command);
    1214:	a8 e3       	ldi	r26, 0x38	; 56
    1216:	b0 e0       	ldi	r27, 0x00	; 0
    1218:	e8 e3       	ldi	r30, 0x38	; 56
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	80 81       	ld	r24, Z
    121e:	98 2f       	mov	r25, r24
    1220:	9f 70       	andi	r25, 0x0F	; 15
    1222:	fe 01       	movw	r30, r28
    1224:	e9 5b       	subi	r30, 0xB9	; 185
    1226:	ff 4f       	sbci	r31, 0xFF	; 255
    1228:	80 81       	ld	r24, Z
    122a:	80 7f       	andi	r24, 0xF0	; 240
    122c:	89 2b       	or	r24, r25
    122e:	8c 93       	st	X, r24
		PORTC|=(1<<7);
    1230:	a5 e3       	ldi	r26, 0x35	; 53
    1232:	b0 e0       	ldi	r27, 0x00	; 0
    1234:	e5 e3       	ldi	r30, 0x35	; 53
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	80 81       	ld	r24, Z
    123a:	80 68       	ori	r24, 0x80	; 128
    123c:	8c 93       	st	X, r24
    123e:	fe 01       	movw	r30, r28
    1240:	ed 5b       	subi	r30, 0xBD	; 189
    1242:	ff 4f       	sbci	r31, 0xFF	; 255
    1244:	80 e0       	ldi	r24, 0x00	; 0
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	a0 e8       	ldi	r26, 0x80	; 128
    124a:	bf e3       	ldi	r27, 0x3F	; 63
    124c:	80 83       	st	Z, r24
    124e:	91 83       	std	Z+1, r25	; 0x01
    1250:	a2 83       	std	Z+2, r26	; 0x02
    1252:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1254:	8e 01       	movw	r16, r28
    1256:	01 5c       	subi	r16, 0xC1	; 193
    1258:	1f 4f       	sbci	r17, 0xFF	; 255
    125a:	fe 01       	movw	r30, r28
    125c:	ed 5b       	subi	r30, 0xBD	; 189
    125e:	ff 4f       	sbci	r31, 0xFF	; 255
    1260:	60 81       	ld	r22, Z
    1262:	71 81       	ldd	r23, Z+1	; 0x01
    1264:	82 81       	ldd	r24, Z+2	; 0x02
    1266:	93 81       	ldd	r25, Z+3	; 0x03
    1268:	20 e0       	ldi	r18, 0x00	; 0
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	48 e4       	ldi	r20, 0x48	; 72
    126e:	53 e4       	ldi	r21, 0x43	; 67
    1270:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1274:	dc 01       	movw	r26, r24
    1276:	cb 01       	movw	r24, r22
    1278:	f8 01       	movw	r30, r16
    127a:	80 83       	st	Z, r24
    127c:	91 83       	std	Z+1, r25	; 0x01
    127e:	a2 83       	std	Z+2, r26	; 0x02
    1280:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1282:	fe 01       	movw	r30, r28
    1284:	ff 96       	adiw	r30, 0x3f	; 63
    1286:	60 81       	ld	r22, Z
    1288:	71 81       	ldd	r23, Z+1	; 0x01
    128a:	82 81       	ldd	r24, Z+2	; 0x02
    128c:	93 81       	ldd	r25, Z+3	; 0x03
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	40 e8       	ldi	r20, 0x80	; 128
    1294:	5f e3       	ldi	r21, 0x3F	; 63
    1296:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    129a:	88 23       	and	r24, r24
    129c:	2c f4       	brge	.+10     	; 0x12a8 <LCD_send_command+0xc4>
		__ticks = 1;
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	9e af       	std	Y+62, r25	; 0x3e
    12a4:	8d af       	std	Y+61, r24	; 0x3d
    12a6:	46 c0       	rjmp	.+140    	; 0x1334 <LCD_send_command+0x150>
	else if (__tmp > 65535)
    12a8:	fe 01       	movw	r30, r28
    12aa:	ff 96       	adiw	r30, 0x3f	; 63
    12ac:	60 81       	ld	r22, Z
    12ae:	71 81       	ldd	r23, Z+1	; 0x01
    12b0:	82 81       	ldd	r24, Z+2	; 0x02
    12b2:	93 81       	ldd	r25, Z+3	; 0x03
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	3f ef       	ldi	r19, 0xFF	; 255
    12b8:	4f e7       	ldi	r20, 0x7F	; 127
    12ba:	57 e4       	ldi	r21, 0x47	; 71
    12bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12c0:	18 16       	cp	r1, r24
    12c2:	64 f5       	brge	.+88     	; 0x131c <LCD_send_command+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12c4:	fe 01       	movw	r30, r28
    12c6:	ed 5b       	subi	r30, 0xBD	; 189
    12c8:	ff 4f       	sbci	r31, 0xFF	; 255
    12ca:	60 81       	ld	r22, Z
    12cc:	71 81       	ldd	r23, Z+1	; 0x01
    12ce:	82 81       	ldd	r24, Z+2	; 0x02
    12d0:	93 81       	ldd	r25, Z+3	; 0x03
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	40 e2       	ldi	r20, 0x20	; 32
    12d8:	51 e4       	ldi	r21, 0x41	; 65
    12da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12de:	dc 01       	movw	r26, r24
    12e0:	cb 01       	movw	r24, r22
    12e2:	bc 01       	movw	r22, r24
    12e4:	cd 01       	movw	r24, r26
    12e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12ea:	dc 01       	movw	r26, r24
    12ec:	cb 01       	movw	r24, r22
    12ee:	9e af       	std	Y+62, r25	; 0x3e
    12f0:	8d af       	std	Y+61, r24	; 0x3d
    12f2:	0f c0       	rjmp	.+30     	; 0x1312 <LCD_send_command+0x12e>
    12f4:	84 e1       	ldi	r24, 0x14	; 20
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	9c af       	std	Y+60, r25	; 0x3c
    12fa:	8b af       	std	Y+59, r24	; 0x3b
    12fc:	8b ad       	ldd	r24, Y+59	; 0x3b
    12fe:	9c ad       	ldd	r25, Y+60	; 0x3c
    1300:	01 97       	sbiw	r24, 0x01	; 1
    1302:	f1 f7       	brne	.-4      	; 0x1300 <LCD_send_command+0x11c>
    1304:	9c af       	std	Y+60, r25	; 0x3c
    1306:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1308:	8d ad       	ldd	r24, Y+61	; 0x3d
    130a:	9e ad       	ldd	r25, Y+62	; 0x3e
    130c:	01 97       	sbiw	r24, 0x01	; 1
    130e:	9e af       	std	Y+62, r25	; 0x3e
    1310:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1312:	8d ad       	ldd	r24, Y+61	; 0x3d
    1314:	9e ad       	ldd	r25, Y+62	; 0x3e
    1316:	00 97       	sbiw	r24, 0x00	; 0
    1318:	69 f7       	brne	.-38     	; 0x12f4 <LCD_send_command+0x110>
    131a:	16 c0       	rjmp	.+44     	; 0x1348 <LCD_send_command+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    131c:	fe 01       	movw	r30, r28
    131e:	ff 96       	adiw	r30, 0x3f	; 63
    1320:	60 81       	ld	r22, Z
    1322:	71 81       	ldd	r23, Z+1	; 0x01
    1324:	82 81       	ldd	r24, Z+2	; 0x02
    1326:	93 81       	ldd	r25, Z+3	; 0x03
    1328:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    132c:	dc 01       	movw	r26, r24
    132e:	cb 01       	movw	r24, r22
    1330:	9e af       	std	Y+62, r25	; 0x3e
    1332:	8d af       	std	Y+61, r24	; 0x3d
    1334:	8d ad       	ldd	r24, Y+61	; 0x3d
    1336:	9e ad       	ldd	r25, Y+62	; 0x3e
    1338:	9a af       	std	Y+58, r25	; 0x3a
    133a:	89 af       	std	Y+57, r24	; 0x39
    133c:	89 ad       	ldd	r24, Y+57	; 0x39
    133e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	f1 f7       	brne	.-4      	; 0x1340 <LCD_send_command+0x15c>
    1344:	9a af       	std	Y+58, r25	; 0x3a
    1346:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1);
		PORTC&=~(1<<7);
    1348:	a5 e3       	ldi	r26, 0x35	; 53
    134a:	b0 e0       	ldi	r27, 0x00	; 0
    134c:	e5 e3       	ldi	r30, 0x35	; 53
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	80 81       	ld	r24, Z
    1352:	8f 77       	andi	r24, 0x7F	; 127
    1354:	8c 93       	st	X, r24
    1356:	80 e0       	ldi	r24, 0x00	; 0
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	a0 e8       	ldi	r26, 0x80	; 128
    135c:	bf e3       	ldi	r27, 0x3F	; 63
    135e:	8d ab       	std	Y+53, r24	; 0x35
    1360:	9e ab       	std	Y+54, r25	; 0x36
    1362:	af ab       	std	Y+55, r26	; 0x37
    1364:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1366:	6d a9       	ldd	r22, Y+53	; 0x35
    1368:	7e a9       	ldd	r23, Y+54	; 0x36
    136a:	8f a9       	ldd	r24, Y+55	; 0x37
    136c:	98 ad       	ldd	r25, Y+56	; 0x38
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	48 e4       	ldi	r20, 0x48	; 72
    1374:	53 e4       	ldi	r21, 0x43	; 67
    1376:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    137a:	dc 01       	movw	r26, r24
    137c:	cb 01       	movw	r24, r22
    137e:	89 ab       	std	Y+49, r24	; 0x31
    1380:	9a ab       	std	Y+50, r25	; 0x32
    1382:	ab ab       	std	Y+51, r26	; 0x33
    1384:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1386:	69 a9       	ldd	r22, Y+49	; 0x31
    1388:	7a a9       	ldd	r23, Y+50	; 0x32
    138a:	8b a9       	ldd	r24, Y+51	; 0x33
    138c:	9c a9       	ldd	r25, Y+52	; 0x34
    138e:	20 e0       	ldi	r18, 0x00	; 0
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	40 e8       	ldi	r20, 0x80	; 128
    1394:	5f e3       	ldi	r21, 0x3F	; 63
    1396:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    139a:	88 23       	and	r24, r24
    139c:	2c f4       	brge	.+10     	; 0x13a8 <LCD_send_command+0x1c4>
		__ticks = 1;
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	98 ab       	std	Y+48, r25	; 0x30
    13a4:	8f a7       	std	Y+47, r24	; 0x2f
    13a6:	3f c0       	rjmp	.+126    	; 0x1426 <LCD_send_command+0x242>
	else if (__tmp > 65535)
    13a8:	69 a9       	ldd	r22, Y+49	; 0x31
    13aa:	7a a9       	ldd	r23, Y+50	; 0x32
    13ac:	8b a9       	ldd	r24, Y+51	; 0x33
    13ae:	9c a9       	ldd	r25, Y+52	; 0x34
    13b0:	20 e0       	ldi	r18, 0x00	; 0
    13b2:	3f ef       	ldi	r19, 0xFF	; 255
    13b4:	4f e7       	ldi	r20, 0x7F	; 127
    13b6:	57 e4       	ldi	r21, 0x47	; 71
    13b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13bc:	18 16       	cp	r1, r24
    13be:	4c f5       	brge	.+82     	; 0x1412 <LCD_send_command+0x22e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13c0:	6d a9       	ldd	r22, Y+53	; 0x35
    13c2:	7e a9       	ldd	r23, Y+54	; 0x36
    13c4:	8f a9       	ldd	r24, Y+55	; 0x37
    13c6:	98 ad       	ldd	r25, Y+56	; 0x38
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	40 e2       	ldi	r20, 0x20	; 32
    13ce:	51 e4       	ldi	r21, 0x41	; 65
    13d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13d4:	dc 01       	movw	r26, r24
    13d6:	cb 01       	movw	r24, r22
    13d8:	bc 01       	movw	r22, r24
    13da:	cd 01       	movw	r24, r26
    13dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13e0:	dc 01       	movw	r26, r24
    13e2:	cb 01       	movw	r24, r22
    13e4:	98 ab       	std	Y+48, r25	; 0x30
    13e6:	8f a7       	std	Y+47, r24	; 0x2f
    13e8:	0f c0       	rjmp	.+30     	; 0x1408 <LCD_send_command+0x224>
    13ea:	84 e1       	ldi	r24, 0x14	; 20
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	9e a7       	std	Y+46, r25	; 0x2e
    13f0:	8d a7       	std	Y+45, r24	; 0x2d
    13f2:	8d a5       	ldd	r24, Y+45	; 0x2d
    13f4:	9e a5       	ldd	r25, Y+46	; 0x2e
    13f6:	01 97       	sbiw	r24, 0x01	; 1
    13f8:	f1 f7       	brne	.-4      	; 0x13f6 <LCD_send_command+0x212>
    13fa:	9e a7       	std	Y+46, r25	; 0x2e
    13fc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13fe:	8f a5       	ldd	r24, Y+47	; 0x2f
    1400:	98 a9       	ldd	r25, Y+48	; 0x30
    1402:	01 97       	sbiw	r24, 0x01	; 1
    1404:	98 ab       	std	Y+48, r25	; 0x30
    1406:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1408:	8f a5       	ldd	r24, Y+47	; 0x2f
    140a:	98 a9       	ldd	r25, Y+48	; 0x30
    140c:	00 97       	sbiw	r24, 0x00	; 0
    140e:	69 f7       	brne	.-38     	; 0x13ea <LCD_send_command+0x206>
    1410:	14 c0       	rjmp	.+40     	; 0x143a <LCD_send_command+0x256>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1412:	69 a9       	ldd	r22, Y+49	; 0x31
    1414:	7a a9       	ldd	r23, Y+50	; 0x32
    1416:	8b a9       	ldd	r24, Y+51	; 0x33
    1418:	9c a9       	ldd	r25, Y+52	; 0x34
    141a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	98 ab       	std	Y+48, r25	; 0x30
    1424:	8f a7       	std	Y+47, r24	; 0x2f
    1426:	8f a5       	ldd	r24, Y+47	; 0x2f
    1428:	98 a9       	ldd	r25, Y+48	; 0x30
    142a:	9c a7       	std	Y+44, r25	; 0x2c
    142c:	8b a7       	std	Y+43, r24	; 0x2b
    142e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1430:	9c a5       	ldd	r25, Y+44	; 0x2c
    1432:	01 97       	sbiw	r24, 0x01	; 1
    1434:	f1 f7       	brne	.-4      	; 0x1432 <LCD_send_command+0x24e>
    1436:	9c a7       	std	Y+44, r25	; 0x2c
    1438:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);

		PORTB=(PORTB&0x0f)|(command<<4);
    143a:	a8 e3       	ldi	r26, 0x38	; 56
    143c:	b0 e0       	ldi	r27, 0x00	; 0
    143e:	e8 e3       	ldi	r30, 0x38	; 56
    1440:	f0 e0       	ldi	r31, 0x00	; 0
    1442:	80 81       	ld	r24, Z
    1444:	28 2f       	mov	r18, r24
    1446:	2f 70       	andi	r18, 0x0F	; 15
    1448:	fe 01       	movw	r30, r28
    144a:	e9 5b       	subi	r30, 0xB9	; 185
    144c:	ff 4f       	sbci	r31, 0xFF	; 255
    144e:	80 81       	ld	r24, Z
    1450:	88 2f       	mov	r24, r24
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	82 95       	swap	r24
    1456:	92 95       	swap	r25
    1458:	90 7f       	andi	r25, 0xF0	; 240
    145a:	98 27       	eor	r25, r24
    145c:	80 7f       	andi	r24, 0xF0	; 240
    145e:	98 27       	eor	r25, r24
    1460:	82 2b       	or	r24, r18
    1462:	8c 93       	st	X, r24
		PORTC|=(1<<7);
    1464:	a5 e3       	ldi	r26, 0x35	; 53
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	e5 e3       	ldi	r30, 0x35	; 53
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	80 81       	ld	r24, Z
    146e:	80 68       	ori	r24, 0x80	; 128
    1470:	8c 93       	st	X, r24
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	a0 e8       	ldi	r26, 0x80	; 128
    1478:	bf e3       	ldi	r27, 0x3F	; 63
    147a:	8f a3       	std	Y+39, r24	; 0x27
    147c:	98 a7       	std	Y+40, r25	; 0x28
    147e:	a9 a7       	std	Y+41, r26	; 0x29
    1480:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1482:	6f a1       	ldd	r22, Y+39	; 0x27
    1484:	78 a5       	ldd	r23, Y+40	; 0x28
    1486:	89 a5       	ldd	r24, Y+41	; 0x29
    1488:	9a a5       	ldd	r25, Y+42	; 0x2a
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	48 e4       	ldi	r20, 0x48	; 72
    1490:	53 e4       	ldi	r21, 0x43	; 67
    1492:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1496:	dc 01       	movw	r26, r24
    1498:	cb 01       	movw	r24, r22
    149a:	8b a3       	std	Y+35, r24	; 0x23
    149c:	9c a3       	std	Y+36, r25	; 0x24
    149e:	ad a3       	std	Y+37, r26	; 0x25
    14a0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    14a2:	6b a1       	ldd	r22, Y+35	; 0x23
    14a4:	7c a1       	ldd	r23, Y+36	; 0x24
    14a6:	8d a1       	ldd	r24, Y+37	; 0x25
    14a8:	9e a1       	ldd	r25, Y+38	; 0x26
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	40 e8       	ldi	r20, 0x80	; 128
    14b0:	5f e3       	ldi	r21, 0x3F	; 63
    14b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14b6:	88 23       	and	r24, r24
    14b8:	2c f4       	brge	.+10     	; 0x14c4 <LCD_send_command+0x2e0>
		__ticks = 1;
    14ba:	81 e0       	ldi	r24, 0x01	; 1
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	9a a3       	std	Y+34, r25	; 0x22
    14c0:	89 a3       	std	Y+33, r24	; 0x21
    14c2:	3f c0       	rjmp	.+126    	; 0x1542 <LCD_send_command+0x35e>
	else if (__tmp > 65535)
    14c4:	6b a1       	ldd	r22, Y+35	; 0x23
    14c6:	7c a1       	ldd	r23, Y+36	; 0x24
    14c8:	8d a1       	ldd	r24, Y+37	; 0x25
    14ca:	9e a1       	ldd	r25, Y+38	; 0x26
    14cc:	20 e0       	ldi	r18, 0x00	; 0
    14ce:	3f ef       	ldi	r19, 0xFF	; 255
    14d0:	4f e7       	ldi	r20, 0x7F	; 127
    14d2:	57 e4       	ldi	r21, 0x47	; 71
    14d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14d8:	18 16       	cp	r1, r24
    14da:	4c f5       	brge	.+82     	; 0x152e <LCD_send_command+0x34a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14dc:	6f a1       	ldd	r22, Y+39	; 0x27
    14de:	78 a5       	ldd	r23, Y+40	; 0x28
    14e0:	89 a5       	ldd	r24, Y+41	; 0x29
    14e2:	9a a5       	ldd	r25, Y+42	; 0x2a
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	40 e2       	ldi	r20, 0x20	; 32
    14ea:	51 e4       	ldi	r21, 0x41	; 65
    14ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14f0:	dc 01       	movw	r26, r24
    14f2:	cb 01       	movw	r24, r22
    14f4:	bc 01       	movw	r22, r24
    14f6:	cd 01       	movw	r24, r26
    14f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14fc:	dc 01       	movw	r26, r24
    14fe:	cb 01       	movw	r24, r22
    1500:	9a a3       	std	Y+34, r25	; 0x22
    1502:	89 a3       	std	Y+33, r24	; 0x21
    1504:	0f c0       	rjmp	.+30     	; 0x1524 <LCD_send_command+0x340>
    1506:	84 e1       	ldi	r24, 0x14	; 20
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	98 a3       	std	Y+32, r25	; 0x20
    150c:	8f 8f       	std	Y+31, r24	; 0x1f
    150e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1510:	98 a1       	ldd	r25, Y+32	; 0x20
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	f1 f7       	brne	.-4      	; 0x1512 <LCD_send_command+0x32e>
    1516:	98 a3       	std	Y+32, r25	; 0x20
    1518:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    151a:	89 a1       	ldd	r24, Y+33	; 0x21
    151c:	9a a1       	ldd	r25, Y+34	; 0x22
    151e:	01 97       	sbiw	r24, 0x01	; 1
    1520:	9a a3       	std	Y+34, r25	; 0x22
    1522:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1524:	89 a1       	ldd	r24, Y+33	; 0x21
    1526:	9a a1       	ldd	r25, Y+34	; 0x22
    1528:	00 97       	sbiw	r24, 0x00	; 0
    152a:	69 f7       	brne	.-38     	; 0x1506 <LCD_send_command+0x322>
    152c:	14 c0       	rjmp	.+40     	; 0x1556 <LCD_send_command+0x372>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    152e:	6b a1       	ldd	r22, Y+35	; 0x23
    1530:	7c a1       	ldd	r23, Y+36	; 0x24
    1532:	8d a1       	ldd	r24, Y+37	; 0x25
    1534:	9e a1       	ldd	r25, Y+38	; 0x26
    1536:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	9a a3       	std	Y+34, r25	; 0x22
    1540:	89 a3       	std	Y+33, r24	; 0x21
    1542:	89 a1       	ldd	r24, Y+33	; 0x21
    1544:	9a a1       	ldd	r25, Y+34	; 0x22
    1546:	9e 8f       	std	Y+30, r25	; 0x1e
    1548:	8d 8f       	std	Y+29, r24	; 0x1d
    154a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    154c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	f1 f7       	brne	.-4      	; 0x154e <LCD_send_command+0x36a>
    1552:	9e 8f       	std	Y+30, r25	; 0x1e
    1554:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);
		PORTC&=~(1<<7);
    1556:	a5 e3       	ldi	r26, 0x35	; 53
    1558:	b0 e0       	ldi	r27, 0x00	; 0
    155a:	e5 e3       	ldi	r30, 0x35	; 53
    155c:	f0 e0       	ldi	r31, 0x00	; 0
    155e:	80 81       	ld	r24, Z
    1560:	8f 77       	andi	r24, 0x7F	; 127
    1562:	8c 93       	st	X, r24
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	a0 e8       	ldi	r26, 0x80	; 128
    156a:	bf e3       	ldi	r27, 0x3F	; 63
    156c:	89 8f       	std	Y+25, r24	; 0x19
    156e:	9a 8f       	std	Y+26, r25	; 0x1a
    1570:	ab 8f       	std	Y+27, r26	; 0x1b
    1572:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1574:	69 8d       	ldd	r22, Y+25	; 0x19
    1576:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1578:	8b 8d       	ldd	r24, Y+27	; 0x1b
    157a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    157c:	20 e0       	ldi	r18, 0x00	; 0
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	48 e4       	ldi	r20, 0x48	; 72
    1582:	53 e4       	ldi	r21, 0x43	; 67
    1584:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	8d 8b       	std	Y+21, r24	; 0x15
    158e:	9e 8b       	std	Y+22, r25	; 0x16
    1590:	af 8b       	std	Y+23, r26	; 0x17
    1592:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1594:	6d 89       	ldd	r22, Y+21	; 0x15
    1596:	7e 89       	ldd	r23, Y+22	; 0x16
    1598:	8f 89       	ldd	r24, Y+23	; 0x17
    159a:	98 8d       	ldd	r25, Y+24	; 0x18
    159c:	20 e0       	ldi	r18, 0x00	; 0
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	40 e8       	ldi	r20, 0x80	; 128
    15a2:	5f e3       	ldi	r21, 0x3F	; 63
    15a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15a8:	88 23       	and	r24, r24
    15aa:	2c f4       	brge	.+10     	; 0x15b6 <LCD_send_command+0x3d2>
		__ticks = 1;
    15ac:	81 e0       	ldi	r24, 0x01	; 1
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	9c 8b       	std	Y+20, r25	; 0x14
    15b2:	8b 8b       	std	Y+19, r24	; 0x13
    15b4:	3f c0       	rjmp	.+126    	; 0x1634 <LCD_send_command+0x450>
	else if (__tmp > 65535)
    15b6:	6d 89       	ldd	r22, Y+21	; 0x15
    15b8:	7e 89       	ldd	r23, Y+22	; 0x16
    15ba:	8f 89       	ldd	r24, Y+23	; 0x17
    15bc:	98 8d       	ldd	r25, Y+24	; 0x18
    15be:	20 e0       	ldi	r18, 0x00	; 0
    15c0:	3f ef       	ldi	r19, 0xFF	; 255
    15c2:	4f e7       	ldi	r20, 0x7F	; 127
    15c4:	57 e4       	ldi	r21, 0x47	; 71
    15c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15ca:	18 16       	cp	r1, r24
    15cc:	4c f5       	brge	.+82     	; 0x1620 <LCD_send_command+0x43c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15ce:	69 8d       	ldd	r22, Y+25	; 0x19
    15d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15d6:	20 e0       	ldi	r18, 0x00	; 0
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	40 e2       	ldi	r20, 0x20	; 32
    15dc:	51 e4       	ldi	r21, 0x41	; 65
    15de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	bc 01       	movw	r22, r24
    15e8:	cd 01       	movw	r24, r26
    15ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15ee:	dc 01       	movw	r26, r24
    15f0:	cb 01       	movw	r24, r22
    15f2:	9c 8b       	std	Y+20, r25	; 0x14
    15f4:	8b 8b       	std	Y+19, r24	; 0x13
    15f6:	0f c0       	rjmp	.+30     	; 0x1616 <LCD_send_command+0x432>
    15f8:	84 e1       	ldi	r24, 0x14	; 20
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	9a 8b       	std	Y+18, r25	; 0x12
    15fe:	89 8b       	std	Y+17, r24	; 0x11
    1600:	89 89       	ldd	r24, Y+17	; 0x11
    1602:	9a 89       	ldd	r25, Y+18	; 0x12
    1604:	01 97       	sbiw	r24, 0x01	; 1
    1606:	f1 f7       	brne	.-4      	; 0x1604 <LCD_send_command+0x420>
    1608:	9a 8b       	std	Y+18, r25	; 0x12
    160a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    160c:	8b 89       	ldd	r24, Y+19	; 0x13
    160e:	9c 89       	ldd	r25, Y+20	; 0x14
    1610:	01 97       	sbiw	r24, 0x01	; 1
    1612:	9c 8b       	std	Y+20, r25	; 0x14
    1614:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1616:	8b 89       	ldd	r24, Y+19	; 0x13
    1618:	9c 89       	ldd	r25, Y+20	; 0x14
    161a:	00 97       	sbiw	r24, 0x00	; 0
    161c:	69 f7       	brne	.-38     	; 0x15f8 <LCD_send_command+0x414>
    161e:	14 c0       	rjmp	.+40     	; 0x1648 <LCD_send_command+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1620:	6d 89       	ldd	r22, Y+21	; 0x15
    1622:	7e 89       	ldd	r23, Y+22	; 0x16
    1624:	8f 89       	ldd	r24, Y+23	; 0x17
    1626:	98 8d       	ldd	r25, Y+24	; 0x18
    1628:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	9c 8b       	std	Y+20, r25	; 0x14
    1632:	8b 8b       	std	Y+19, r24	; 0x13
    1634:	8b 89       	ldd	r24, Y+19	; 0x13
    1636:	9c 89       	ldd	r25, Y+20	; 0x14
    1638:	98 8b       	std	Y+16, r25	; 0x10
    163a:	8f 87       	std	Y+15, r24	; 0x0f
    163c:	8f 85       	ldd	r24, Y+15	; 0x0f
    163e:	98 89       	ldd	r25, Y+16	; 0x10
    1640:	01 97       	sbiw	r24, 0x01	; 1
    1642:	f1 f7       	brne	.-4      	; 0x1640 <LCD_send_command+0x45c>
    1644:	98 8b       	std	Y+16, r25	; 0x10
    1646:	8f 87       	std	Y+15, r24	; 0x0f
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	a0 ea       	ldi	r26, 0xA0	; 160
    164e:	b0 e4       	ldi	r27, 0x40	; 64
    1650:	8b 87       	std	Y+11, r24	; 0x0b
    1652:	9c 87       	std	Y+12, r25	; 0x0c
    1654:	ad 87       	std	Y+13, r26	; 0x0d
    1656:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1658:	6b 85       	ldd	r22, Y+11	; 0x0b
    165a:	7c 85       	ldd	r23, Y+12	; 0x0c
    165c:	8d 85       	ldd	r24, Y+13	; 0x0d
    165e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	48 e4       	ldi	r20, 0x48	; 72
    1666:	53 e4       	ldi	r21, 0x43	; 67
    1668:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    166c:	dc 01       	movw	r26, r24
    166e:	cb 01       	movw	r24, r22
    1670:	8f 83       	std	Y+7, r24	; 0x07
    1672:	98 87       	std	Y+8, r25	; 0x08
    1674:	a9 87       	std	Y+9, r26	; 0x09
    1676:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1678:	6f 81       	ldd	r22, Y+7	; 0x07
    167a:	78 85       	ldd	r23, Y+8	; 0x08
    167c:	89 85       	ldd	r24, Y+9	; 0x09
    167e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1680:	20 e0       	ldi	r18, 0x00	; 0
    1682:	30 e0       	ldi	r19, 0x00	; 0
    1684:	40 e8       	ldi	r20, 0x80	; 128
    1686:	5f e3       	ldi	r21, 0x3F	; 63
    1688:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    168c:	88 23       	and	r24, r24
    168e:	2c f4       	brge	.+10     	; 0x169a <LCD_send_command+0x4b6>
		__ticks = 1;
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	9e 83       	std	Y+6, r25	; 0x06
    1696:	8d 83       	std	Y+5, r24	; 0x05
    1698:	3f c0       	rjmp	.+126    	; 0x1718 <LCD_send_command+0x534>
	else if (__tmp > 65535)
    169a:	6f 81       	ldd	r22, Y+7	; 0x07
    169c:	78 85       	ldd	r23, Y+8	; 0x08
    169e:	89 85       	ldd	r24, Y+9	; 0x09
    16a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    16a2:	20 e0       	ldi	r18, 0x00	; 0
    16a4:	3f ef       	ldi	r19, 0xFF	; 255
    16a6:	4f e7       	ldi	r20, 0x7F	; 127
    16a8:	57 e4       	ldi	r21, 0x47	; 71
    16aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16ae:	18 16       	cp	r1, r24
    16b0:	4c f5       	brge	.+82     	; 0x1704 <LCD_send_command+0x520>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    16b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    16b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    16b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ba:	20 e0       	ldi	r18, 0x00	; 0
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	40 e2       	ldi	r20, 0x20	; 32
    16c0:	51 e4       	ldi	r21, 0x41	; 65
    16c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16c6:	dc 01       	movw	r26, r24
    16c8:	cb 01       	movw	r24, r22
    16ca:	bc 01       	movw	r22, r24
    16cc:	cd 01       	movw	r24, r26
    16ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16d2:	dc 01       	movw	r26, r24
    16d4:	cb 01       	movw	r24, r22
    16d6:	9e 83       	std	Y+6, r25	; 0x06
    16d8:	8d 83       	std	Y+5, r24	; 0x05
    16da:	0f c0       	rjmp	.+30     	; 0x16fa <LCD_send_command+0x516>
    16dc:	84 e1       	ldi	r24, 0x14	; 20
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	9c 83       	std	Y+4, r25	; 0x04
    16e2:	8b 83       	std	Y+3, r24	; 0x03
    16e4:	8b 81       	ldd	r24, Y+3	; 0x03
    16e6:	9c 81       	ldd	r25, Y+4	; 0x04
    16e8:	01 97       	sbiw	r24, 0x01	; 1
    16ea:	f1 f7       	brne	.-4      	; 0x16e8 <LCD_send_command+0x504>
    16ec:	9c 83       	std	Y+4, r25	; 0x04
    16ee:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16f0:	8d 81       	ldd	r24, Y+5	; 0x05
    16f2:	9e 81       	ldd	r25, Y+6	; 0x06
    16f4:	01 97       	sbiw	r24, 0x01	; 1
    16f6:	9e 83       	std	Y+6, r25	; 0x06
    16f8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16fa:	8d 81       	ldd	r24, Y+5	; 0x05
    16fc:	9e 81       	ldd	r25, Y+6	; 0x06
    16fe:	00 97       	sbiw	r24, 0x00	; 0
    1700:	69 f7       	brne	.-38     	; 0x16dc <LCD_send_command+0x4f8>
    1702:	14 c0       	rjmp	.+40     	; 0x172c <LCD_send_command+0x548>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1704:	6f 81       	ldd	r22, Y+7	; 0x07
    1706:	78 85       	ldd	r23, Y+8	; 0x08
    1708:	89 85       	ldd	r24, Y+9	; 0x09
    170a:	9a 85       	ldd	r25, Y+10	; 0x0a
    170c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1710:	dc 01       	movw	r26, r24
    1712:	cb 01       	movw	r24, r22
    1714:	9e 83       	std	Y+6, r25	; 0x06
    1716:	8d 83       	std	Y+5, r24	; 0x05
    1718:	8d 81       	ldd	r24, Y+5	; 0x05
    171a:	9e 81       	ldd	r25, Y+6	; 0x06
    171c:	9a 83       	std	Y+2, r25	; 0x02
    171e:	89 83       	std	Y+1, r24	; 0x01
    1720:	89 81       	ldd	r24, Y+1	; 0x01
    1722:	9a 81       	ldd	r25, Y+2	; 0x02
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	f1 f7       	brne	.-4      	; 0x1724 <LCD_send_command+0x540>
    1728:	9a 83       	std	Y+2, r25	; 0x02
    172a:	89 83       	std	Y+1, r24	; 0x01
		    PORTC&=~(1<<7);
		    _delay_ms(1);

	}
#endif
}
    172c:	c9 5b       	subi	r28, 0xB9	; 185
    172e:	df 4f       	sbci	r29, 0xFF	; 255
    1730:	0f b6       	in	r0, 0x3f	; 63
    1732:	f8 94       	cli
    1734:	de bf       	out	0x3e, r29	; 62
    1736:	0f be       	out	0x3f, r0	; 63
    1738:	cd bf       	out	0x3d, r28	; 61
    173a:	cf 91       	pop	r28
    173c:	df 91       	pop	r29
    173e:	1f 91       	pop	r17
    1740:	0f 91       	pop	r16
    1742:	08 95       	ret

00001744 <LCD_send_one_letter>:
void LCD_send_one_letter(unsigned char data, unsigned char y,unsigned char x)
{
    1744:	0f 93       	push	r16
    1746:	1f 93       	push	r17
    1748:	df 93       	push	r29
    174a:	cf 93       	push	r28
    174c:	cd b7       	in	r28, 0x3d	; 61
    174e:	de b7       	in	r29, 0x3e	; 62
    1750:	cd 59       	subi	r28, 0x9D	; 157
    1752:	d0 40       	sbci	r29, 0x00	; 0
    1754:	0f b6       	in	r0, 0x3f	; 63
    1756:	f8 94       	cli
    1758:	de bf       	out	0x3e, r29	; 62
    175a:	0f be       	out	0x3f, r0	; 63
    175c:	cd bf       	out	0x3d, r28	; 61
    175e:	fe 01       	movw	r30, r28
    1760:	e5 56       	subi	r30, 0x65	; 101
    1762:	ff 4f       	sbci	r31, 0xFF	; 255
    1764:	80 83       	st	Z, r24
    1766:	fe 01       	movw	r30, r28
    1768:	e4 56       	subi	r30, 0x64	; 100
    176a:	ff 4f       	sbci	r31, 0xFF	; 255
    176c:	60 83       	st	Z, r22
    176e:	fe 01       	movw	r30, r28
    1770:	e3 56       	subi	r30, 0x63	; 99
    1772:	ff 4f       	sbci	r31, 0xFF	; 255
    1774:	40 83       	st	Z, r20

#if lcd_4_bit_mode

	if(y==first_row)
    1776:	fe 01       	movw	r30, r28
    1778:	e4 56       	subi	r30, 0x64	; 100
    177a:	ff 4f       	sbci	r31, 0xFF	; 255
    177c:	80 81       	ld	r24, Z
    177e:	81 30       	cpi	r24, 0x01	; 1
    1780:	09 f0       	breq	.+2      	; 0x1784 <LCD_send_one_letter+0x40>
    1782:	81 c4       	rjmp	.+2306   	; 0x2086 <LCD_send_one_letter+0x942>
	{

		LCD_send_command(0x80+x-1);
    1784:	fe 01       	movw	r30, r28
    1786:	e3 56       	subi	r30, 0x63	; 99
    1788:	ff 4f       	sbci	r31, 0xFF	; 255
    178a:	80 81       	ld	r24, Z
    178c:	81 58       	subi	r24, 0x81	; 129
    178e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
    1792:	fe 01       	movw	r30, r28
    1794:	e9 56       	subi	r30, 0x69	; 105
    1796:	ff 4f       	sbci	r31, 0xFF	; 255
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	a0 e8       	ldi	r26, 0x80	; 128
    179e:	bf e3       	ldi	r27, 0x3F	; 63
    17a0:	80 83       	st	Z, r24
    17a2:	91 83       	std	Z+1, r25	; 0x01
    17a4:	a2 83       	std	Z+2, r26	; 0x02
    17a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17a8:	8e 01       	movw	r16, r28
    17aa:	0d 56       	subi	r16, 0x6D	; 109
    17ac:	1f 4f       	sbci	r17, 0xFF	; 255
    17ae:	fe 01       	movw	r30, r28
    17b0:	e9 56       	subi	r30, 0x69	; 105
    17b2:	ff 4f       	sbci	r31, 0xFF	; 255
    17b4:	60 81       	ld	r22, Z
    17b6:	71 81       	ldd	r23, Z+1	; 0x01
    17b8:	82 81       	ldd	r24, Z+2	; 0x02
    17ba:	93 81       	ldd	r25, Z+3	; 0x03
    17bc:	20 e0       	ldi	r18, 0x00	; 0
    17be:	30 e0       	ldi	r19, 0x00	; 0
    17c0:	48 e4       	ldi	r20, 0x48	; 72
    17c2:	53 e4       	ldi	r21, 0x43	; 67
    17c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17c8:	dc 01       	movw	r26, r24
    17ca:	cb 01       	movw	r24, r22
    17cc:	f8 01       	movw	r30, r16
    17ce:	80 83       	st	Z, r24
    17d0:	91 83       	std	Z+1, r25	; 0x01
    17d2:	a2 83       	std	Z+2, r26	; 0x02
    17d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17d6:	fe 01       	movw	r30, r28
    17d8:	ed 56       	subi	r30, 0x6D	; 109
    17da:	ff 4f       	sbci	r31, 0xFF	; 255
    17dc:	60 81       	ld	r22, Z
    17de:	71 81       	ldd	r23, Z+1	; 0x01
    17e0:	82 81       	ldd	r24, Z+2	; 0x02
    17e2:	93 81       	ldd	r25, Z+3	; 0x03
    17e4:	20 e0       	ldi	r18, 0x00	; 0
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	40 e8       	ldi	r20, 0x80	; 128
    17ea:	5f e3       	ldi	r21, 0x3F	; 63
    17ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17f0:	88 23       	and	r24, r24
    17f2:	44 f4       	brge	.+16     	; 0x1804 <LCD_send_one_letter+0xc0>
		__ticks = 1;
    17f4:	fe 01       	movw	r30, r28
    17f6:	ef 56       	subi	r30, 0x6F	; 111
    17f8:	ff 4f       	sbci	r31, 0xFF	; 255
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	91 83       	std	Z+1, r25	; 0x01
    1800:	80 83       	st	Z, r24
    1802:	64 c0       	rjmp	.+200    	; 0x18cc <LCD_send_one_letter+0x188>
	else if (__tmp > 65535)
    1804:	fe 01       	movw	r30, r28
    1806:	ed 56       	subi	r30, 0x6D	; 109
    1808:	ff 4f       	sbci	r31, 0xFF	; 255
    180a:	60 81       	ld	r22, Z
    180c:	71 81       	ldd	r23, Z+1	; 0x01
    180e:	82 81       	ldd	r24, Z+2	; 0x02
    1810:	93 81       	ldd	r25, Z+3	; 0x03
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	3f ef       	ldi	r19, 0xFF	; 255
    1816:	4f e7       	ldi	r20, 0x7F	; 127
    1818:	57 e4       	ldi	r21, 0x47	; 71
    181a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    181e:	18 16       	cp	r1, r24
    1820:	0c f0       	brlt	.+2      	; 0x1824 <LCD_send_one_letter+0xe0>
    1822:	43 c0       	rjmp	.+134    	; 0x18aa <LCD_send_one_letter+0x166>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1824:	fe 01       	movw	r30, r28
    1826:	e9 56       	subi	r30, 0x69	; 105
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	60 81       	ld	r22, Z
    182c:	71 81       	ldd	r23, Z+1	; 0x01
    182e:	82 81       	ldd	r24, Z+2	; 0x02
    1830:	93 81       	ldd	r25, Z+3	; 0x03
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	40 e2       	ldi	r20, 0x20	; 32
    1838:	51 e4       	ldi	r21, 0x41	; 65
    183a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    183e:	dc 01       	movw	r26, r24
    1840:	cb 01       	movw	r24, r22
    1842:	8e 01       	movw	r16, r28
    1844:	0f 56       	subi	r16, 0x6F	; 111
    1846:	1f 4f       	sbci	r17, 0xFF	; 255
    1848:	bc 01       	movw	r22, r24
    184a:	cd 01       	movw	r24, r26
    184c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1850:	dc 01       	movw	r26, r24
    1852:	cb 01       	movw	r24, r22
    1854:	f8 01       	movw	r30, r16
    1856:	91 83       	std	Z+1, r25	; 0x01
    1858:	80 83       	st	Z, r24
    185a:	1f c0       	rjmp	.+62     	; 0x189a <LCD_send_one_letter+0x156>
    185c:	fe 01       	movw	r30, r28
    185e:	e1 57       	subi	r30, 0x71	; 113
    1860:	ff 4f       	sbci	r31, 0xFF	; 255
    1862:	84 e1       	ldi	r24, 0x14	; 20
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	91 83       	std	Z+1, r25	; 0x01
    1868:	80 83       	st	Z, r24
    186a:	fe 01       	movw	r30, r28
    186c:	e1 57       	subi	r30, 0x71	; 113
    186e:	ff 4f       	sbci	r31, 0xFF	; 255
    1870:	80 81       	ld	r24, Z
    1872:	91 81       	ldd	r25, Z+1	; 0x01
    1874:	01 97       	sbiw	r24, 0x01	; 1
    1876:	f1 f7       	brne	.-4      	; 0x1874 <LCD_send_one_letter+0x130>
    1878:	fe 01       	movw	r30, r28
    187a:	e1 57       	subi	r30, 0x71	; 113
    187c:	ff 4f       	sbci	r31, 0xFF	; 255
    187e:	91 83       	std	Z+1, r25	; 0x01
    1880:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1882:	de 01       	movw	r26, r28
    1884:	af 56       	subi	r26, 0x6F	; 111
    1886:	bf 4f       	sbci	r27, 0xFF	; 255
    1888:	fe 01       	movw	r30, r28
    188a:	ef 56       	subi	r30, 0x6F	; 111
    188c:	ff 4f       	sbci	r31, 0xFF	; 255
    188e:	80 81       	ld	r24, Z
    1890:	91 81       	ldd	r25, Z+1	; 0x01
    1892:	01 97       	sbiw	r24, 0x01	; 1
    1894:	11 96       	adiw	r26, 0x01	; 1
    1896:	9c 93       	st	X, r25
    1898:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    189a:	fe 01       	movw	r30, r28
    189c:	ef 56       	subi	r30, 0x6F	; 111
    189e:	ff 4f       	sbci	r31, 0xFF	; 255
    18a0:	80 81       	ld	r24, Z
    18a2:	91 81       	ldd	r25, Z+1	; 0x01
    18a4:	00 97       	sbiw	r24, 0x00	; 0
    18a6:	d1 f6       	brne	.-76     	; 0x185c <LCD_send_one_letter+0x118>
    18a8:	27 c0       	rjmp	.+78     	; 0x18f8 <LCD_send_one_letter+0x1b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18aa:	8e 01       	movw	r16, r28
    18ac:	0f 56       	subi	r16, 0x6F	; 111
    18ae:	1f 4f       	sbci	r17, 0xFF	; 255
    18b0:	fe 01       	movw	r30, r28
    18b2:	ed 56       	subi	r30, 0x6D	; 109
    18b4:	ff 4f       	sbci	r31, 0xFF	; 255
    18b6:	60 81       	ld	r22, Z
    18b8:	71 81       	ldd	r23, Z+1	; 0x01
    18ba:	82 81       	ldd	r24, Z+2	; 0x02
    18bc:	93 81       	ldd	r25, Z+3	; 0x03
    18be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18c2:	dc 01       	movw	r26, r24
    18c4:	cb 01       	movw	r24, r22
    18c6:	f8 01       	movw	r30, r16
    18c8:	91 83       	std	Z+1, r25	; 0x01
    18ca:	80 83       	st	Z, r24
    18cc:	de 01       	movw	r26, r28
    18ce:	a3 57       	subi	r26, 0x73	; 115
    18d0:	bf 4f       	sbci	r27, 0xFF	; 255
    18d2:	fe 01       	movw	r30, r28
    18d4:	ef 56       	subi	r30, 0x6F	; 111
    18d6:	ff 4f       	sbci	r31, 0xFF	; 255
    18d8:	80 81       	ld	r24, Z
    18da:	91 81       	ldd	r25, Z+1	; 0x01
    18dc:	8d 93       	st	X+, r24
    18de:	9c 93       	st	X, r25
    18e0:	fe 01       	movw	r30, r28
    18e2:	e3 57       	subi	r30, 0x73	; 115
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	80 81       	ld	r24, Z
    18e8:	91 81       	ldd	r25, Z+1	; 0x01
    18ea:	01 97       	sbiw	r24, 0x01	; 1
    18ec:	f1 f7       	brne	.-4      	; 0x18ea <LCD_send_one_letter+0x1a6>
    18ee:	fe 01       	movw	r30, r28
    18f0:	e3 57       	subi	r30, 0x73	; 115
    18f2:	ff 4f       	sbci	r31, 0xFF	; 255
    18f4:	91 83       	std	Z+1, r25	; 0x01
    18f6:	80 83       	st	Z, r24
		_delay_ms(1);

	PORTC|=(1<<6);
    18f8:	a5 e3       	ldi	r26, 0x35	; 53
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	e5 e3       	ldi	r30, 0x35	; 53
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	80 81       	ld	r24, Z
    1902:	80 64       	ori	r24, 0x40	; 64
    1904:	8c 93       	st	X, r24
	PORTB=(PORTB&0x0f)|(0xf0&data);
    1906:	a8 e3       	ldi	r26, 0x38	; 56
    1908:	b0 e0       	ldi	r27, 0x00	; 0
    190a:	e8 e3       	ldi	r30, 0x38	; 56
    190c:	f0 e0       	ldi	r31, 0x00	; 0
    190e:	80 81       	ld	r24, Z
    1910:	98 2f       	mov	r25, r24
    1912:	9f 70       	andi	r25, 0x0F	; 15
    1914:	fe 01       	movw	r30, r28
    1916:	e5 56       	subi	r30, 0x65	; 101
    1918:	ff 4f       	sbci	r31, 0xFF	; 255
    191a:	80 81       	ld	r24, Z
    191c:	80 7f       	andi	r24, 0xF0	; 240
    191e:	89 2b       	or	r24, r25
    1920:	8c 93       	st	X, r24
	PORTC|=(1<<7);
    1922:	a5 e3       	ldi	r26, 0x35	; 53
    1924:	b0 e0       	ldi	r27, 0x00	; 0
    1926:	e5 e3       	ldi	r30, 0x35	; 53
    1928:	f0 e0       	ldi	r31, 0x00	; 0
    192a:	80 81       	ld	r24, Z
    192c:	80 68       	ori	r24, 0x80	; 128
    192e:	8c 93       	st	X, r24
    1930:	fe 01       	movw	r30, r28
    1932:	e7 57       	subi	r30, 0x77	; 119
    1934:	ff 4f       	sbci	r31, 0xFF	; 255
    1936:	80 e0       	ldi	r24, 0x00	; 0
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	a0 e8       	ldi	r26, 0x80	; 128
    193c:	bf e3       	ldi	r27, 0x3F	; 63
    193e:	80 83       	st	Z, r24
    1940:	91 83       	std	Z+1, r25	; 0x01
    1942:	a2 83       	std	Z+2, r26	; 0x02
    1944:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1946:	8e 01       	movw	r16, r28
    1948:	0b 57       	subi	r16, 0x7B	; 123
    194a:	1f 4f       	sbci	r17, 0xFF	; 255
    194c:	fe 01       	movw	r30, r28
    194e:	e7 57       	subi	r30, 0x77	; 119
    1950:	ff 4f       	sbci	r31, 0xFF	; 255
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	48 e4       	ldi	r20, 0x48	; 72
    1960:	53 e4       	ldi	r21, 0x43	; 67
    1962:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22
    196a:	f8 01       	movw	r30, r16
    196c:	80 83       	st	Z, r24
    196e:	91 83       	std	Z+1, r25	; 0x01
    1970:	a2 83       	std	Z+2, r26	; 0x02
    1972:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1974:	fe 01       	movw	r30, r28
    1976:	eb 57       	subi	r30, 0x7B	; 123
    1978:	ff 4f       	sbci	r31, 0xFF	; 255
    197a:	60 81       	ld	r22, Z
    197c:	71 81       	ldd	r23, Z+1	; 0x01
    197e:	82 81       	ldd	r24, Z+2	; 0x02
    1980:	93 81       	ldd	r25, Z+3	; 0x03
    1982:	20 e0       	ldi	r18, 0x00	; 0
    1984:	30 e0       	ldi	r19, 0x00	; 0
    1986:	40 e8       	ldi	r20, 0x80	; 128
    1988:	5f e3       	ldi	r21, 0x3F	; 63
    198a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    198e:	88 23       	and	r24, r24
    1990:	44 f4       	brge	.+16     	; 0x19a2 <LCD_send_one_letter+0x25e>
		__ticks = 1;
    1992:	fe 01       	movw	r30, r28
    1994:	ed 57       	subi	r30, 0x7D	; 125
    1996:	ff 4f       	sbci	r31, 0xFF	; 255
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	91 83       	std	Z+1, r25	; 0x01
    199e:	80 83       	st	Z, r24
    19a0:	64 c0       	rjmp	.+200    	; 0x1a6a <LCD_send_one_letter+0x326>
	else if (__tmp > 65535)
    19a2:	fe 01       	movw	r30, r28
    19a4:	eb 57       	subi	r30, 0x7B	; 123
    19a6:	ff 4f       	sbci	r31, 0xFF	; 255
    19a8:	60 81       	ld	r22, Z
    19aa:	71 81       	ldd	r23, Z+1	; 0x01
    19ac:	82 81       	ldd	r24, Z+2	; 0x02
    19ae:	93 81       	ldd	r25, Z+3	; 0x03
    19b0:	20 e0       	ldi	r18, 0x00	; 0
    19b2:	3f ef       	ldi	r19, 0xFF	; 255
    19b4:	4f e7       	ldi	r20, 0x7F	; 127
    19b6:	57 e4       	ldi	r21, 0x47	; 71
    19b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19bc:	18 16       	cp	r1, r24
    19be:	0c f0       	brlt	.+2      	; 0x19c2 <LCD_send_one_letter+0x27e>
    19c0:	43 c0       	rjmp	.+134    	; 0x1a48 <LCD_send_one_letter+0x304>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c2:	fe 01       	movw	r30, r28
    19c4:	e7 57       	subi	r30, 0x77	; 119
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	60 81       	ld	r22, Z
    19ca:	71 81       	ldd	r23, Z+1	; 0x01
    19cc:	82 81       	ldd	r24, Z+2	; 0x02
    19ce:	93 81       	ldd	r25, Z+3	; 0x03
    19d0:	20 e0       	ldi	r18, 0x00	; 0
    19d2:	30 e0       	ldi	r19, 0x00	; 0
    19d4:	40 e2       	ldi	r20, 0x20	; 32
    19d6:	51 e4       	ldi	r21, 0x41	; 65
    19d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19dc:	dc 01       	movw	r26, r24
    19de:	cb 01       	movw	r24, r22
    19e0:	8e 01       	movw	r16, r28
    19e2:	0d 57       	subi	r16, 0x7D	; 125
    19e4:	1f 4f       	sbci	r17, 0xFF	; 255
    19e6:	bc 01       	movw	r22, r24
    19e8:	cd 01       	movw	r24, r26
    19ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19ee:	dc 01       	movw	r26, r24
    19f0:	cb 01       	movw	r24, r22
    19f2:	f8 01       	movw	r30, r16
    19f4:	91 83       	std	Z+1, r25	; 0x01
    19f6:	80 83       	st	Z, r24
    19f8:	1f c0       	rjmp	.+62     	; 0x1a38 <LCD_send_one_letter+0x2f4>
    19fa:	fe 01       	movw	r30, r28
    19fc:	ef 57       	subi	r30, 0x7F	; 127
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	84 e1       	ldi	r24, 0x14	; 20
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	91 83       	std	Z+1, r25	; 0x01
    1a06:	80 83       	st	Z, r24
    1a08:	fe 01       	movw	r30, r28
    1a0a:	ef 57       	subi	r30, 0x7F	; 127
    1a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0e:	80 81       	ld	r24, Z
    1a10:	91 81       	ldd	r25, Z+1	; 0x01
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <LCD_send_one_letter+0x2ce>
    1a16:	fe 01       	movw	r30, r28
    1a18:	ef 57       	subi	r30, 0x7F	; 127
    1a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1c:	91 83       	std	Z+1, r25	; 0x01
    1a1e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a20:	de 01       	movw	r26, r28
    1a22:	ad 57       	subi	r26, 0x7D	; 125
    1a24:	bf 4f       	sbci	r27, 0xFF	; 255
    1a26:	fe 01       	movw	r30, r28
    1a28:	ed 57       	subi	r30, 0x7D	; 125
    1a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2c:	80 81       	ld	r24, Z
    1a2e:	91 81       	ldd	r25, Z+1	; 0x01
    1a30:	01 97       	sbiw	r24, 0x01	; 1
    1a32:	11 96       	adiw	r26, 0x01	; 1
    1a34:	9c 93       	st	X, r25
    1a36:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a38:	fe 01       	movw	r30, r28
    1a3a:	ed 57       	subi	r30, 0x7D	; 125
    1a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3e:	80 81       	ld	r24, Z
    1a40:	91 81       	ldd	r25, Z+1	; 0x01
    1a42:	00 97       	sbiw	r24, 0x00	; 0
    1a44:	d1 f6       	brne	.-76     	; 0x19fa <LCD_send_one_letter+0x2b6>
    1a46:	27 c0       	rjmp	.+78     	; 0x1a96 <LCD_send_one_letter+0x352>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a48:	8e 01       	movw	r16, r28
    1a4a:	0d 57       	subi	r16, 0x7D	; 125
    1a4c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a4e:	fe 01       	movw	r30, r28
    1a50:	eb 57       	subi	r30, 0x7B	; 123
    1a52:	ff 4f       	sbci	r31, 0xFF	; 255
    1a54:	60 81       	ld	r22, Z
    1a56:	71 81       	ldd	r23, Z+1	; 0x01
    1a58:	82 81       	ldd	r24, Z+2	; 0x02
    1a5a:	93 81       	ldd	r25, Z+3	; 0x03
    1a5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	f8 01       	movw	r30, r16
    1a66:	91 83       	std	Z+1, r25	; 0x01
    1a68:	80 83       	st	Z, r24
    1a6a:	de 01       	movw	r26, r28
    1a6c:	a1 58       	subi	r26, 0x81	; 129
    1a6e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a70:	fe 01       	movw	r30, r28
    1a72:	ed 57       	subi	r30, 0x7D	; 125
    1a74:	ff 4f       	sbci	r31, 0xFF	; 255
    1a76:	80 81       	ld	r24, Z
    1a78:	91 81       	ldd	r25, Z+1	; 0x01
    1a7a:	8d 93       	st	X+, r24
    1a7c:	9c 93       	st	X, r25
    1a7e:	fe 01       	movw	r30, r28
    1a80:	e1 58       	subi	r30, 0x81	; 129
    1a82:	ff 4f       	sbci	r31, 0xFF	; 255
    1a84:	80 81       	ld	r24, Z
    1a86:	91 81       	ldd	r25, Z+1	; 0x01
    1a88:	01 97       	sbiw	r24, 0x01	; 1
    1a8a:	f1 f7       	brne	.-4      	; 0x1a88 <LCD_send_one_letter+0x344>
    1a8c:	fe 01       	movw	r30, r28
    1a8e:	e1 58       	subi	r30, 0x81	; 129
    1a90:	ff 4f       	sbci	r31, 0xFF	; 255
    1a92:	91 83       	std	Z+1, r25	; 0x01
    1a94:	80 83       	st	Z, r24
	_delay_ms(1);
	PORTC&=~(1<<7);
    1a96:	a5 e3       	ldi	r26, 0x35	; 53
    1a98:	b0 e0       	ldi	r27, 0x00	; 0
    1a9a:	e5 e3       	ldi	r30, 0x35	; 53
    1a9c:	f0 e0       	ldi	r31, 0x00	; 0
    1a9e:	80 81       	ld	r24, Z
    1aa0:	8f 77       	andi	r24, 0x7F	; 127
    1aa2:	8c 93       	st	X, r24
    1aa4:	fe 01       	movw	r30, r28
    1aa6:	e5 58       	subi	r30, 0x85	; 133
    1aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aaa:	80 e0       	ldi	r24, 0x00	; 0
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	a0 e8       	ldi	r26, 0x80	; 128
    1ab0:	bf e3       	ldi	r27, 0x3F	; 63
    1ab2:	80 83       	st	Z, r24
    1ab4:	91 83       	std	Z+1, r25	; 0x01
    1ab6:	a2 83       	std	Z+2, r26	; 0x02
    1ab8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1aba:	8e 01       	movw	r16, r28
    1abc:	09 58       	subi	r16, 0x89	; 137
    1abe:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac0:	fe 01       	movw	r30, r28
    1ac2:	e5 58       	subi	r30, 0x85	; 133
    1ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac6:	60 81       	ld	r22, Z
    1ac8:	71 81       	ldd	r23, Z+1	; 0x01
    1aca:	82 81       	ldd	r24, Z+2	; 0x02
    1acc:	93 81       	ldd	r25, Z+3	; 0x03
    1ace:	20 e0       	ldi	r18, 0x00	; 0
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	48 e4       	ldi	r20, 0x48	; 72
    1ad4:	53 e4       	ldi	r21, 0x43	; 67
    1ad6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ada:	dc 01       	movw	r26, r24
    1adc:	cb 01       	movw	r24, r22
    1ade:	f8 01       	movw	r30, r16
    1ae0:	80 83       	st	Z, r24
    1ae2:	91 83       	std	Z+1, r25	; 0x01
    1ae4:	a2 83       	std	Z+2, r26	; 0x02
    1ae6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ae8:	fe 01       	movw	r30, r28
    1aea:	e9 58       	subi	r30, 0x89	; 137
    1aec:	ff 4f       	sbci	r31, 0xFF	; 255
    1aee:	60 81       	ld	r22, Z
    1af0:	71 81       	ldd	r23, Z+1	; 0x01
    1af2:	82 81       	ldd	r24, Z+2	; 0x02
    1af4:	93 81       	ldd	r25, Z+3	; 0x03
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	40 e8       	ldi	r20, 0x80	; 128
    1afc:	5f e3       	ldi	r21, 0x3F	; 63
    1afe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b02:	88 23       	and	r24, r24
    1b04:	44 f4       	brge	.+16     	; 0x1b16 <LCD_send_one_letter+0x3d2>
		__ticks = 1;
    1b06:	fe 01       	movw	r30, r28
    1b08:	eb 58       	subi	r30, 0x8B	; 139
    1b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	91 83       	std	Z+1, r25	; 0x01
    1b12:	80 83       	st	Z, r24
    1b14:	64 c0       	rjmp	.+200    	; 0x1bde <LCD_send_one_letter+0x49a>
	else if (__tmp > 65535)
    1b16:	fe 01       	movw	r30, r28
    1b18:	e9 58       	subi	r30, 0x89	; 137
    1b1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1c:	60 81       	ld	r22, Z
    1b1e:	71 81       	ldd	r23, Z+1	; 0x01
    1b20:	82 81       	ldd	r24, Z+2	; 0x02
    1b22:	93 81       	ldd	r25, Z+3	; 0x03
    1b24:	20 e0       	ldi	r18, 0x00	; 0
    1b26:	3f ef       	ldi	r19, 0xFF	; 255
    1b28:	4f e7       	ldi	r20, 0x7F	; 127
    1b2a:	57 e4       	ldi	r21, 0x47	; 71
    1b2c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b30:	18 16       	cp	r1, r24
    1b32:	0c f0       	brlt	.+2      	; 0x1b36 <LCD_send_one_letter+0x3f2>
    1b34:	43 c0       	rjmp	.+134    	; 0x1bbc <LCD_send_one_letter+0x478>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b36:	fe 01       	movw	r30, r28
    1b38:	e5 58       	subi	r30, 0x85	; 133
    1b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3c:	60 81       	ld	r22, Z
    1b3e:	71 81       	ldd	r23, Z+1	; 0x01
    1b40:	82 81       	ldd	r24, Z+2	; 0x02
    1b42:	93 81       	ldd	r25, Z+3	; 0x03
    1b44:	20 e0       	ldi	r18, 0x00	; 0
    1b46:	30 e0       	ldi	r19, 0x00	; 0
    1b48:	40 e2       	ldi	r20, 0x20	; 32
    1b4a:	51 e4       	ldi	r21, 0x41	; 65
    1b4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b50:	dc 01       	movw	r26, r24
    1b52:	cb 01       	movw	r24, r22
    1b54:	8e 01       	movw	r16, r28
    1b56:	0b 58       	subi	r16, 0x8B	; 139
    1b58:	1f 4f       	sbci	r17, 0xFF	; 255
    1b5a:	bc 01       	movw	r22, r24
    1b5c:	cd 01       	movw	r24, r26
    1b5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b62:	dc 01       	movw	r26, r24
    1b64:	cb 01       	movw	r24, r22
    1b66:	f8 01       	movw	r30, r16
    1b68:	91 83       	std	Z+1, r25	; 0x01
    1b6a:	80 83       	st	Z, r24
    1b6c:	1f c0       	rjmp	.+62     	; 0x1bac <LCD_send_one_letter+0x468>
    1b6e:	fe 01       	movw	r30, r28
    1b70:	ed 58       	subi	r30, 0x8D	; 141
    1b72:	ff 4f       	sbci	r31, 0xFF	; 255
    1b74:	84 e1       	ldi	r24, 0x14	; 20
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	91 83       	std	Z+1, r25	; 0x01
    1b7a:	80 83       	st	Z, r24
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	ed 58       	subi	r30, 0x8D	; 141
    1b80:	ff 4f       	sbci	r31, 0xFF	; 255
    1b82:	80 81       	ld	r24, Z
    1b84:	91 81       	ldd	r25, Z+1	; 0x01
    1b86:	01 97       	sbiw	r24, 0x01	; 1
    1b88:	f1 f7       	brne	.-4      	; 0x1b86 <LCD_send_one_letter+0x442>
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	ed 58       	subi	r30, 0x8D	; 141
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	91 83       	std	Z+1, r25	; 0x01
    1b92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b94:	de 01       	movw	r26, r28
    1b96:	ab 58       	subi	r26, 0x8B	; 139
    1b98:	bf 4f       	sbci	r27, 0xFF	; 255
    1b9a:	fe 01       	movw	r30, r28
    1b9c:	eb 58       	subi	r30, 0x8B	; 139
    1b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba0:	80 81       	ld	r24, Z
    1ba2:	91 81       	ldd	r25, Z+1	; 0x01
    1ba4:	01 97       	sbiw	r24, 0x01	; 1
    1ba6:	11 96       	adiw	r26, 0x01	; 1
    1ba8:	9c 93       	st	X, r25
    1baa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bac:	fe 01       	movw	r30, r28
    1bae:	eb 58       	subi	r30, 0x8B	; 139
    1bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb2:	80 81       	ld	r24, Z
    1bb4:	91 81       	ldd	r25, Z+1	; 0x01
    1bb6:	00 97       	sbiw	r24, 0x00	; 0
    1bb8:	d1 f6       	brne	.-76     	; 0x1b6e <LCD_send_one_letter+0x42a>
    1bba:	27 c0       	rjmp	.+78     	; 0x1c0a <LCD_send_one_letter+0x4c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bbc:	8e 01       	movw	r16, r28
    1bbe:	0b 58       	subi	r16, 0x8B	; 139
    1bc0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc2:	fe 01       	movw	r30, r28
    1bc4:	e9 58       	subi	r30, 0x89	; 137
    1bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc8:	60 81       	ld	r22, Z
    1bca:	71 81       	ldd	r23, Z+1	; 0x01
    1bcc:	82 81       	ldd	r24, Z+2	; 0x02
    1bce:	93 81       	ldd	r25, Z+3	; 0x03
    1bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bd4:	dc 01       	movw	r26, r24
    1bd6:	cb 01       	movw	r24, r22
    1bd8:	f8 01       	movw	r30, r16
    1bda:	91 83       	std	Z+1, r25	; 0x01
    1bdc:	80 83       	st	Z, r24
    1bde:	de 01       	movw	r26, r28
    1be0:	af 58       	subi	r26, 0x8F	; 143
    1be2:	bf 4f       	sbci	r27, 0xFF	; 255
    1be4:	fe 01       	movw	r30, r28
    1be6:	eb 58       	subi	r30, 0x8B	; 139
    1be8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bea:	80 81       	ld	r24, Z
    1bec:	91 81       	ldd	r25, Z+1	; 0x01
    1bee:	8d 93       	st	X+, r24
    1bf0:	9c 93       	st	X, r25
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	ef 58       	subi	r30, 0x8F	; 143
    1bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf8:	80 81       	ld	r24, Z
    1bfa:	91 81       	ldd	r25, Z+1	; 0x01
    1bfc:	01 97       	sbiw	r24, 0x01	; 1
    1bfe:	f1 f7       	brne	.-4      	; 0x1bfc <LCD_send_one_letter+0x4b8>
    1c00:	fe 01       	movw	r30, r28
    1c02:	ef 58       	subi	r30, 0x8F	; 143
    1c04:	ff 4f       	sbci	r31, 0xFF	; 255
    1c06:	91 83       	std	Z+1, r25	; 0x01
    1c08:	80 83       	st	Z, r24
	_delay_ms(1);

	PORTB=(PORTB&0x0f)|(data<<4);
    1c0a:	a8 e3       	ldi	r26, 0x38	; 56
    1c0c:	b0 e0       	ldi	r27, 0x00	; 0
    1c0e:	e8 e3       	ldi	r30, 0x38	; 56
    1c10:	f0 e0       	ldi	r31, 0x00	; 0
    1c12:	80 81       	ld	r24, Z
    1c14:	28 2f       	mov	r18, r24
    1c16:	2f 70       	andi	r18, 0x0F	; 15
    1c18:	fe 01       	movw	r30, r28
    1c1a:	e5 56       	subi	r30, 0x65	; 101
    1c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1e:	80 81       	ld	r24, Z
    1c20:	88 2f       	mov	r24, r24
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	82 95       	swap	r24
    1c26:	92 95       	swap	r25
    1c28:	90 7f       	andi	r25, 0xF0	; 240
    1c2a:	98 27       	eor	r25, r24
    1c2c:	80 7f       	andi	r24, 0xF0	; 240
    1c2e:	98 27       	eor	r25, r24
    1c30:	82 2b       	or	r24, r18
    1c32:	8c 93       	st	X, r24
	PORTC|=(1<<7);
    1c34:	a5 e3       	ldi	r26, 0x35	; 53
    1c36:	b0 e0       	ldi	r27, 0x00	; 0
    1c38:	e5 e3       	ldi	r30, 0x35	; 53
    1c3a:	f0 e0       	ldi	r31, 0x00	; 0
    1c3c:	80 81       	ld	r24, Z
    1c3e:	80 68       	ori	r24, 0x80	; 128
    1c40:	8c 93       	st	X, r24
    1c42:	fe 01       	movw	r30, r28
    1c44:	e3 59       	subi	r30, 0x93	; 147
    1c46:	ff 4f       	sbci	r31, 0xFF	; 255
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	a0 e8       	ldi	r26, 0x80	; 128
    1c4e:	bf e3       	ldi	r27, 0x3F	; 63
    1c50:	80 83       	st	Z, r24
    1c52:	91 83       	std	Z+1, r25	; 0x01
    1c54:	a2 83       	std	Z+2, r26	; 0x02
    1c56:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c58:	8e 01       	movw	r16, r28
    1c5a:	07 59       	subi	r16, 0x97	; 151
    1c5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e3 59       	subi	r30, 0x93	; 147
    1c62:	ff 4f       	sbci	r31, 0xFF	; 255
    1c64:	60 81       	ld	r22, Z
    1c66:	71 81       	ldd	r23, Z+1	; 0x01
    1c68:	82 81       	ldd	r24, Z+2	; 0x02
    1c6a:	93 81       	ldd	r25, Z+3	; 0x03
    1c6c:	20 e0       	ldi	r18, 0x00	; 0
    1c6e:	30 e0       	ldi	r19, 0x00	; 0
    1c70:	48 e4       	ldi	r20, 0x48	; 72
    1c72:	53 e4       	ldi	r21, 0x43	; 67
    1c74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c78:	dc 01       	movw	r26, r24
    1c7a:	cb 01       	movw	r24, r22
    1c7c:	f8 01       	movw	r30, r16
    1c7e:	80 83       	st	Z, r24
    1c80:	91 83       	std	Z+1, r25	; 0x01
    1c82:	a2 83       	std	Z+2, r26	; 0x02
    1c84:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c86:	fe 01       	movw	r30, r28
    1c88:	e7 59       	subi	r30, 0x97	; 151
    1c8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8c:	60 81       	ld	r22, Z
    1c8e:	71 81       	ldd	r23, Z+1	; 0x01
    1c90:	82 81       	ldd	r24, Z+2	; 0x02
    1c92:	93 81       	ldd	r25, Z+3	; 0x03
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	40 e8       	ldi	r20, 0x80	; 128
    1c9a:	5f e3       	ldi	r21, 0x3F	; 63
    1c9c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ca0:	88 23       	and	r24, r24
    1ca2:	44 f4       	brge	.+16     	; 0x1cb4 <LCD_send_one_letter+0x570>
		__ticks = 1;
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e9 59       	subi	r30, 0x99	; 153
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	91 83       	std	Z+1, r25	; 0x01
    1cb0:	80 83       	st	Z, r24
    1cb2:	64 c0       	rjmp	.+200    	; 0x1d7c <LCD_send_one_letter+0x638>
	else if (__tmp > 65535)
    1cb4:	fe 01       	movw	r30, r28
    1cb6:	e7 59       	subi	r30, 0x97	; 151
    1cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cba:	60 81       	ld	r22, Z
    1cbc:	71 81       	ldd	r23, Z+1	; 0x01
    1cbe:	82 81       	ldd	r24, Z+2	; 0x02
    1cc0:	93 81       	ldd	r25, Z+3	; 0x03
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	3f ef       	ldi	r19, 0xFF	; 255
    1cc6:	4f e7       	ldi	r20, 0x7F	; 127
    1cc8:	57 e4       	ldi	r21, 0x47	; 71
    1cca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1cce:	18 16       	cp	r1, r24
    1cd0:	0c f0       	brlt	.+2      	; 0x1cd4 <LCD_send_one_letter+0x590>
    1cd2:	43 c0       	rjmp	.+134    	; 0x1d5a <LCD_send_one_letter+0x616>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	e3 59       	subi	r30, 0x93	; 147
    1cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cda:	60 81       	ld	r22, Z
    1cdc:	71 81       	ldd	r23, Z+1	; 0x01
    1cde:	82 81       	ldd	r24, Z+2	; 0x02
    1ce0:	93 81       	ldd	r25, Z+3	; 0x03
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	40 e2       	ldi	r20, 0x20	; 32
    1ce8:	51 e4       	ldi	r21, 0x41	; 65
    1cea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cee:	dc 01       	movw	r26, r24
    1cf0:	cb 01       	movw	r24, r22
    1cf2:	8e 01       	movw	r16, r28
    1cf4:	09 59       	subi	r16, 0x99	; 153
    1cf6:	1f 4f       	sbci	r17, 0xFF	; 255
    1cf8:	bc 01       	movw	r22, r24
    1cfa:	cd 01       	movw	r24, r26
    1cfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d00:	dc 01       	movw	r26, r24
    1d02:	cb 01       	movw	r24, r22
    1d04:	f8 01       	movw	r30, r16
    1d06:	91 83       	std	Z+1, r25	; 0x01
    1d08:	80 83       	st	Z, r24
    1d0a:	1f c0       	rjmp	.+62     	; 0x1d4a <LCD_send_one_letter+0x606>
    1d0c:	fe 01       	movw	r30, r28
    1d0e:	eb 59       	subi	r30, 0x9B	; 155
    1d10:	ff 4f       	sbci	r31, 0xFF	; 255
    1d12:	84 e1       	ldi	r24, 0x14	; 20
    1d14:	90 e0       	ldi	r25, 0x00	; 0
    1d16:	91 83       	std	Z+1, r25	; 0x01
    1d18:	80 83       	st	Z, r24
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	eb 59       	subi	r30, 0x9B	; 155
    1d1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d20:	80 81       	ld	r24, Z
    1d22:	91 81       	ldd	r25, Z+1	; 0x01
    1d24:	01 97       	sbiw	r24, 0x01	; 1
    1d26:	f1 f7       	brne	.-4      	; 0x1d24 <LCD_send_one_letter+0x5e0>
    1d28:	fe 01       	movw	r30, r28
    1d2a:	eb 59       	subi	r30, 0x9B	; 155
    1d2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2e:	91 83       	std	Z+1, r25	; 0x01
    1d30:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d32:	de 01       	movw	r26, r28
    1d34:	a9 59       	subi	r26, 0x99	; 153
    1d36:	bf 4f       	sbci	r27, 0xFF	; 255
    1d38:	fe 01       	movw	r30, r28
    1d3a:	e9 59       	subi	r30, 0x99	; 153
    1d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3e:	80 81       	ld	r24, Z
    1d40:	91 81       	ldd	r25, Z+1	; 0x01
    1d42:	01 97       	sbiw	r24, 0x01	; 1
    1d44:	11 96       	adiw	r26, 0x01	; 1
    1d46:	9c 93       	st	X, r25
    1d48:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d4a:	fe 01       	movw	r30, r28
    1d4c:	e9 59       	subi	r30, 0x99	; 153
    1d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d50:	80 81       	ld	r24, Z
    1d52:	91 81       	ldd	r25, Z+1	; 0x01
    1d54:	00 97       	sbiw	r24, 0x00	; 0
    1d56:	d1 f6       	brne	.-76     	; 0x1d0c <LCD_send_one_letter+0x5c8>
    1d58:	27 c0       	rjmp	.+78     	; 0x1da8 <LCD_send_one_letter+0x664>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d5a:	8e 01       	movw	r16, r28
    1d5c:	09 59       	subi	r16, 0x99	; 153
    1d5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d60:	fe 01       	movw	r30, r28
    1d62:	e7 59       	subi	r30, 0x97	; 151
    1d64:	ff 4f       	sbci	r31, 0xFF	; 255
    1d66:	60 81       	ld	r22, Z
    1d68:	71 81       	ldd	r23, Z+1	; 0x01
    1d6a:	82 81       	ldd	r24, Z+2	; 0x02
    1d6c:	93 81       	ldd	r25, Z+3	; 0x03
    1d6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d72:	dc 01       	movw	r26, r24
    1d74:	cb 01       	movw	r24, r22
    1d76:	f8 01       	movw	r30, r16
    1d78:	91 83       	std	Z+1, r25	; 0x01
    1d7a:	80 83       	st	Z, r24
    1d7c:	de 01       	movw	r26, r28
    1d7e:	ad 59       	subi	r26, 0x9D	; 157
    1d80:	bf 4f       	sbci	r27, 0xFF	; 255
    1d82:	fe 01       	movw	r30, r28
    1d84:	e9 59       	subi	r30, 0x99	; 153
    1d86:	ff 4f       	sbci	r31, 0xFF	; 255
    1d88:	80 81       	ld	r24, Z
    1d8a:	91 81       	ldd	r25, Z+1	; 0x01
    1d8c:	8d 93       	st	X+, r24
    1d8e:	9c 93       	st	X, r25
    1d90:	fe 01       	movw	r30, r28
    1d92:	ed 59       	subi	r30, 0x9D	; 157
    1d94:	ff 4f       	sbci	r31, 0xFF	; 255
    1d96:	80 81       	ld	r24, Z
    1d98:	91 81       	ldd	r25, Z+1	; 0x01
    1d9a:	01 97       	sbiw	r24, 0x01	; 1
    1d9c:	f1 f7       	brne	.-4      	; 0x1d9a <LCD_send_one_letter+0x656>
    1d9e:	fe 01       	movw	r30, r28
    1da0:	ed 59       	subi	r30, 0x9D	; 157
    1da2:	ff 4f       	sbci	r31, 0xFF	; 255
    1da4:	91 83       	std	Z+1, r25	; 0x01
    1da6:	80 83       	st	Z, r24
	_delay_ms(1);
	PORTC&=~(1<<7);
    1da8:	a5 e3       	ldi	r26, 0x35	; 53
    1daa:	b0 e0       	ldi	r27, 0x00	; 0
    1dac:	e5 e3       	ldi	r30, 0x35	; 53
    1dae:	f0 e0       	ldi	r31, 0x00	; 0
    1db0:	80 81       	ld	r24, Z
    1db2:	8f 77       	andi	r24, 0x7F	; 127
    1db4:	8c 93       	st	X, r24
    1db6:	fe 01       	movw	r30, r28
    1db8:	e1 5a       	subi	r30, 0xA1	; 161
    1dba:	ff 4f       	sbci	r31, 0xFF	; 255
    1dbc:	80 e0       	ldi	r24, 0x00	; 0
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	a0 e8       	ldi	r26, 0x80	; 128
    1dc2:	bf e3       	ldi	r27, 0x3F	; 63
    1dc4:	80 83       	st	Z, r24
    1dc6:	91 83       	std	Z+1, r25	; 0x01
    1dc8:	a2 83       	std	Z+2, r26	; 0x02
    1dca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dcc:	8e 01       	movw	r16, r28
    1dce:	05 5a       	subi	r16, 0xA5	; 165
    1dd0:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	e1 5a       	subi	r30, 0xA1	; 161
    1dd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd8:	60 81       	ld	r22, Z
    1dda:	71 81       	ldd	r23, Z+1	; 0x01
    1ddc:	82 81       	ldd	r24, Z+2	; 0x02
    1dde:	93 81       	ldd	r25, Z+3	; 0x03
    1de0:	20 e0       	ldi	r18, 0x00	; 0
    1de2:	30 e0       	ldi	r19, 0x00	; 0
    1de4:	48 e4       	ldi	r20, 0x48	; 72
    1de6:	53 e4       	ldi	r21, 0x43	; 67
    1de8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dec:	dc 01       	movw	r26, r24
    1dee:	cb 01       	movw	r24, r22
    1df0:	f8 01       	movw	r30, r16
    1df2:	80 83       	st	Z, r24
    1df4:	91 83       	std	Z+1, r25	; 0x01
    1df6:	a2 83       	std	Z+2, r26	; 0x02
    1df8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dfa:	fe 01       	movw	r30, r28
    1dfc:	e5 5a       	subi	r30, 0xA5	; 165
    1dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    1e00:	60 81       	ld	r22, Z
    1e02:	71 81       	ldd	r23, Z+1	; 0x01
    1e04:	82 81       	ldd	r24, Z+2	; 0x02
    1e06:	93 81       	ldd	r25, Z+3	; 0x03
    1e08:	20 e0       	ldi	r18, 0x00	; 0
    1e0a:	30 e0       	ldi	r19, 0x00	; 0
    1e0c:	40 e8       	ldi	r20, 0x80	; 128
    1e0e:	5f e3       	ldi	r21, 0x3F	; 63
    1e10:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e14:	88 23       	and	r24, r24
    1e16:	44 f4       	brge	.+16     	; 0x1e28 <LCD_send_one_letter+0x6e4>
		__ticks = 1;
    1e18:	fe 01       	movw	r30, r28
    1e1a:	e7 5a       	subi	r30, 0xA7	; 167
    1e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1e:	81 e0       	ldi	r24, 0x01	; 1
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	91 83       	std	Z+1, r25	; 0x01
    1e24:	80 83       	st	Z, r24
    1e26:	64 c0       	rjmp	.+200    	; 0x1ef0 <LCD_send_one_letter+0x7ac>
	else if (__tmp > 65535)
    1e28:	fe 01       	movw	r30, r28
    1e2a:	e5 5a       	subi	r30, 0xA5	; 165
    1e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2e:	60 81       	ld	r22, Z
    1e30:	71 81       	ldd	r23, Z+1	; 0x01
    1e32:	82 81       	ldd	r24, Z+2	; 0x02
    1e34:	93 81       	ldd	r25, Z+3	; 0x03
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	3f ef       	ldi	r19, 0xFF	; 255
    1e3a:	4f e7       	ldi	r20, 0x7F	; 127
    1e3c:	57 e4       	ldi	r21, 0x47	; 71
    1e3e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e42:	18 16       	cp	r1, r24
    1e44:	0c f0       	brlt	.+2      	; 0x1e48 <LCD_send_one_letter+0x704>
    1e46:	43 c0       	rjmp	.+134    	; 0x1ece <LCD_send_one_letter+0x78a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e48:	fe 01       	movw	r30, r28
    1e4a:	e1 5a       	subi	r30, 0xA1	; 161
    1e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4e:	60 81       	ld	r22, Z
    1e50:	71 81       	ldd	r23, Z+1	; 0x01
    1e52:	82 81       	ldd	r24, Z+2	; 0x02
    1e54:	93 81       	ldd	r25, Z+3	; 0x03
    1e56:	20 e0       	ldi	r18, 0x00	; 0
    1e58:	30 e0       	ldi	r19, 0x00	; 0
    1e5a:	40 e2       	ldi	r20, 0x20	; 32
    1e5c:	51 e4       	ldi	r21, 0x41	; 65
    1e5e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e62:	dc 01       	movw	r26, r24
    1e64:	cb 01       	movw	r24, r22
    1e66:	8e 01       	movw	r16, r28
    1e68:	07 5a       	subi	r16, 0xA7	; 167
    1e6a:	1f 4f       	sbci	r17, 0xFF	; 255
    1e6c:	bc 01       	movw	r22, r24
    1e6e:	cd 01       	movw	r24, r26
    1e70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e74:	dc 01       	movw	r26, r24
    1e76:	cb 01       	movw	r24, r22
    1e78:	f8 01       	movw	r30, r16
    1e7a:	91 83       	std	Z+1, r25	; 0x01
    1e7c:	80 83       	st	Z, r24
    1e7e:	1f c0       	rjmp	.+62     	; 0x1ebe <LCD_send_one_letter+0x77a>
    1e80:	fe 01       	movw	r30, r28
    1e82:	e9 5a       	subi	r30, 0xA9	; 169
    1e84:	ff 4f       	sbci	r31, 0xFF	; 255
    1e86:	84 e1       	ldi	r24, 0x14	; 20
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	91 83       	std	Z+1, r25	; 0x01
    1e8c:	80 83       	st	Z, r24
    1e8e:	fe 01       	movw	r30, r28
    1e90:	e9 5a       	subi	r30, 0xA9	; 169
    1e92:	ff 4f       	sbci	r31, 0xFF	; 255
    1e94:	80 81       	ld	r24, Z
    1e96:	91 81       	ldd	r25, Z+1	; 0x01
    1e98:	01 97       	sbiw	r24, 0x01	; 1
    1e9a:	f1 f7       	brne	.-4      	; 0x1e98 <LCD_send_one_letter+0x754>
    1e9c:	fe 01       	movw	r30, r28
    1e9e:	e9 5a       	subi	r30, 0xA9	; 169
    1ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea2:	91 83       	std	Z+1, r25	; 0x01
    1ea4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ea6:	de 01       	movw	r26, r28
    1ea8:	a7 5a       	subi	r26, 0xA7	; 167
    1eaa:	bf 4f       	sbci	r27, 0xFF	; 255
    1eac:	fe 01       	movw	r30, r28
    1eae:	e7 5a       	subi	r30, 0xA7	; 167
    1eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb2:	80 81       	ld	r24, Z
    1eb4:	91 81       	ldd	r25, Z+1	; 0x01
    1eb6:	01 97       	sbiw	r24, 0x01	; 1
    1eb8:	11 96       	adiw	r26, 0x01	; 1
    1eba:	9c 93       	st	X, r25
    1ebc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ebe:	fe 01       	movw	r30, r28
    1ec0:	e7 5a       	subi	r30, 0xA7	; 167
    1ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec4:	80 81       	ld	r24, Z
    1ec6:	91 81       	ldd	r25, Z+1	; 0x01
    1ec8:	00 97       	sbiw	r24, 0x00	; 0
    1eca:	d1 f6       	brne	.-76     	; 0x1e80 <LCD_send_one_letter+0x73c>
    1ecc:	27 c0       	rjmp	.+78     	; 0x1f1c <LCD_send_one_letter+0x7d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ece:	8e 01       	movw	r16, r28
    1ed0:	07 5a       	subi	r16, 0xA7	; 167
    1ed2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed4:	fe 01       	movw	r30, r28
    1ed6:	e5 5a       	subi	r30, 0xA5	; 165
    1ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eda:	60 81       	ld	r22, Z
    1edc:	71 81       	ldd	r23, Z+1	; 0x01
    1ede:	82 81       	ldd	r24, Z+2	; 0x02
    1ee0:	93 81       	ldd	r25, Z+3	; 0x03
    1ee2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ee6:	dc 01       	movw	r26, r24
    1ee8:	cb 01       	movw	r24, r22
    1eea:	f8 01       	movw	r30, r16
    1eec:	91 83       	std	Z+1, r25	; 0x01
    1eee:	80 83       	st	Z, r24
    1ef0:	de 01       	movw	r26, r28
    1ef2:	ab 5a       	subi	r26, 0xAB	; 171
    1ef4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	e7 5a       	subi	r30, 0xA7	; 167
    1efa:	ff 4f       	sbci	r31, 0xFF	; 255
    1efc:	80 81       	ld	r24, Z
    1efe:	91 81       	ldd	r25, Z+1	; 0x01
    1f00:	8d 93       	st	X+, r24
    1f02:	9c 93       	st	X, r25
    1f04:	fe 01       	movw	r30, r28
    1f06:	eb 5a       	subi	r30, 0xAB	; 171
    1f08:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0a:	80 81       	ld	r24, Z
    1f0c:	91 81       	ldd	r25, Z+1	; 0x01
    1f0e:	01 97       	sbiw	r24, 0x01	; 1
    1f10:	f1 f7       	brne	.-4      	; 0x1f0e <LCD_send_one_letter+0x7ca>
    1f12:	fe 01       	movw	r30, r28
    1f14:	eb 5a       	subi	r30, 0xAB	; 171
    1f16:	ff 4f       	sbci	r31, 0xFF	; 255
    1f18:	91 83       	std	Z+1, r25	; 0x01
    1f1a:	80 83       	st	Z, r24
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	ef 5a       	subi	r30, 0xAF	; 175
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	80 e0       	ldi	r24, 0x00	; 0
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	a0 ea       	ldi	r26, 0xA0	; 160
    1f28:	b0 e4       	ldi	r27, 0x40	; 64
    1f2a:	80 83       	st	Z, r24
    1f2c:	91 83       	std	Z+1, r25	; 0x01
    1f2e:	a2 83       	std	Z+2, r26	; 0x02
    1f30:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f32:	8e 01       	movw	r16, r28
    1f34:	03 5b       	subi	r16, 0xB3	; 179
    1f36:	1f 4f       	sbci	r17, 0xFF	; 255
    1f38:	fe 01       	movw	r30, r28
    1f3a:	ef 5a       	subi	r30, 0xAF	; 175
    1f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3e:	60 81       	ld	r22, Z
    1f40:	71 81       	ldd	r23, Z+1	; 0x01
    1f42:	82 81       	ldd	r24, Z+2	; 0x02
    1f44:	93 81       	ldd	r25, Z+3	; 0x03
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	48 e4       	ldi	r20, 0x48	; 72
    1f4c:	53 e4       	ldi	r21, 0x43	; 67
    1f4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f52:	dc 01       	movw	r26, r24
    1f54:	cb 01       	movw	r24, r22
    1f56:	f8 01       	movw	r30, r16
    1f58:	80 83       	st	Z, r24
    1f5a:	91 83       	std	Z+1, r25	; 0x01
    1f5c:	a2 83       	std	Z+2, r26	; 0x02
    1f5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f60:	fe 01       	movw	r30, r28
    1f62:	e3 5b       	subi	r30, 0xB3	; 179
    1f64:	ff 4f       	sbci	r31, 0xFF	; 255
    1f66:	60 81       	ld	r22, Z
    1f68:	71 81       	ldd	r23, Z+1	; 0x01
    1f6a:	82 81       	ldd	r24, Z+2	; 0x02
    1f6c:	93 81       	ldd	r25, Z+3	; 0x03
    1f6e:	20 e0       	ldi	r18, 0x00	; 0
    1f70:	30 e0       	ldi	r19, 0x00	; 0
    1f72:	40 e8       	ldi	r20, 0x80	; 128
    1f74:	5f e3       	ldi	r21, 0x3F	; 63
    1f76:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f7a:	88 23       	and	r24, r24
    1f7c:	44 f4       	brge	.+16     	; 0x1f8e <LCD_send_one_letter+0x84a>
		__ticks = 1;
    1f7e:	fe 01       	movw	r30, r28
    1f80:	e5 5b       	subi	r30, 0xB5	; 181
    1f82:	ff 4f       	sbci	r31, 0xFF	; 255
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	90 e0       	ldi	r25, 0x00	; 0
    1f88:	91 83       	std	Z+1, r25	; 0x01
    1f8a:	80 83       	st	Z, r24
    1f8c:	64 c0       	rjmp	.+200    	; 0x2056 <LCD_send_one_letter+0x912>
	else if (__tmp > 65535)
    1f8e:	fe 01       	movw	r30, r28
    1f90:	e3 5b       	subi	r30, 0xB3	; 179
    1f92:	ff 4f       	sbci	r31, 0xFF	; 255
    1f94:	60 81       	ld	r22, Z
    1f96:	71 81       	ldd	r23, Z+1	; 0x01
    1f98:	82 81       	ldd	r24, Z+2	; 0x02
    1f9a:	93 81       	ldd	r25, Z+3	; 0x03
    1f9c:	20 e0       	ldi	r18, 0x00	; 0
    1f9e:	3f ef       	ldi	r19, 0xFF	; 255
    1fa0:	4f e7       	ldi	r20, 0x7F	; 127
    1fa2:	57 e4       	ldi	r21, 0x47	; 71
    1fa4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fa8:	18 16       	cp	r1, r24
    1faa:	0c f0       	brlt	.+2      	; 0x1fae <LCD_send_one_letter+0x86a>
    1fac:	43 c0       	rjmp	.+134    	; 0x2034 <LCD_send_one_letter+0x8f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fae:	fe 01       	movw	r30, r28
    1fb0:	ef 5a       	subi	r30, 0xAF	; 175
    1fb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb4:	60 81       	ld	r22, Z
    1fb6:	71 81       	ldd	r23, Z+1	; 0x01
    1fb8:	82 81       	ldd	r24, Z+2	; 0x02
    1fba:	93 81       	ldd	r25, Z+3	; 0x03
    1fbc:	20 e0       	ldi	r18, 0x00	; 0
    1fbe:	30 e0       	ldi	r19, 0x00	; 0
    1fc0:	40 e2       	ldi	r20, 0x20	; 32
    1fc2:	51 e4       	ldi	r21, 0x41	; 65
    1fc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc8:	dc 01       	movw	r26, r24
    1fca:	cb 01       	movw	r24, r22
    1fcc:	8e 01       	movw	r16, r28
    1fce:	05 5b       	subi	r16, 0xB5	; 181
    1fd0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd2:	bc 01       	movw	r22, r24
    1fd4:	cd 01       	movw	r24, r26
    1fd6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fda:	dc 01       	movw	r26, r24
    1fdc:	cb 01       	movw	r24, r22
    1fde:	f8 01       	movw	r30, r16
    1fe0:	91 83       	std	Z+1, r25	; 0x01
    1fe2:	80 83       	st	Z, r24
    1fe4:	1f c0       	rjmp	.+62     	; 0x2024 <LCD_send_one_letter+0x8e0>
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e7 5b       	subi	r30, 0xB7	; 183
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	84 e1       	ldi	r24, 0x14	; 20
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	91 83       	std	Z+1, r25	; 0x01
    1ff2:	80 83       	st	Z, r24
    1ff4:	fe 01       	movw	r30, r28
    1ff6:	e7 5b       	subi	r30, 0xB7	; 183
    1ff8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffa:	80 81       	ld	r24, Z
    1ffc:	91 81       	ldd	r25, Z+1	; 0x01
    1ffe:	01 97       	sbiw	r24, 0x01	; 1
    2000:	f1 f7       	brne	.-4      	; 0x1ffe <LCD_send_one_letter+0x8ba>
    2002:	fe 01       	movw	r30, r28
    2004:	e7 5b       	subi	r30, 0xB7	; 183
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	91 83       	std	Z+1, r25	; 0x01
    200a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    200c:	de 01       	movw	r26, r28
    200e:	a5 5b       	subi	r26, 0xB5	; 181
    2010:	bf 4f       	sbci	r27, 0xFF	; 255
    2012:	fe 01       	movw	r30, r28
    2014:	e5 5b       	subi	r30, 0xB5	; 181
    2016:	ff 4f       	sbci	r31, 0xFF	; 255
    2018:	80 81       	ld	r24, Z
    201a:	91 81       	ldd	r25, Z+1	; 0x01
    201c:	01 97       	sbiw	r24, 0x01	; 1
    201e:	11 96       	adiw	r26, 0x01	; 1
    2020:	9c 93       	st	X, r25
    2022:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2024:	fe 01       	movw	r30, r28
    2026:	e5 5b       	subi	r30, 0xB5	; 181
    2028:	ff 4f       	sbci	r31, 0xFF	; 255
    202a:	80 81       	ld	r24, Z
    202c:	91 81       	ldd	r25, Z+1	; 0x01
    202e:	00 97       	sbiw	r24, 0x00	; 0
    2030:	d1 f6       	brne	.-76     	; 0x1fe6 <LCD_send_one_letter+0x8a2>
    2032:	ca c2       	rjmp	.+1428   	; 0x25c8 <LCD_send_one_letter+0xe84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2034:	8e 01       	movw	r16, r28
    2036:	05 5b       	subi	r16, 0xB5	; 181
    2038:	1f 4f       	sbci	r17, 0xFF	; 255
    203a:	fe 01       	movw	r30, r28
    203c:	e3 5b       	subi	r30, 0xB3	; 179
    203e:	ff 4f       	sbci	r31, 0xFF	; 255
    2040:	60 81       	ld	r22, Z
    2042:	71 81       	ldd	r23, Z+1	; 0x01
    2044:	82 81       	ldd	r24, Z+2	; 0x02
    2046:	93 81       	ldd	r25, Z+3	; 0x03
    2048:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    204c:	dc 01       	movw	r26, r24
    204e:	cb 01       	movw	r24, r22
    2050:	f8 01       	movw	r30, r16
    2052:	91 83       	std	Z+1, r25	; 0x01
    2054:	80 83       	st	Z, r24
    2056:	de 01       	movw	r26, r28
    2058:	a9 5b       	subi	r26, 0xB9	; 185
    205a:	bf 4f       	sbci	r27, 0xFF	; 255
    205c:	fe 01       	movw	r30, r28
    205e:	e5 5b       	subi	r30, 0xB5	; 181
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	80 81       	ld	r24, Z
    2064:	91 81       	ldd	r25, Z+1	; 0x01
    2066:	11 96       	adiw	r26, 0x01	; 1
    2068:	9c 93       	st	X, r25
    206a:	8e 93       	st	-X, r24
    206c:	fe 01       	movw	r30, r28
    206e:	e9 5b       	subi	r30, 0xB9	; 185
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	80 81       	ld	r24, Z
    2074:	91 81       	ldd	r25, Z+1	; 0x01
    2076:	01 97       	sbiw	r24, 0x01	; 1
    2078:	f1 f7       	brne	.-4      	; 0x2076 <LCD_send_one_letter+0x932>
    207a:	fe 01       	movw	r30, r28
    207c:	e9 5b       	subi	r30, 0xB9	; 185
    207e:	ff 4f       	sbci	r31, 0xFF	; 255
    2080:	91 83       	std	Z+1, r25	; 0x01
    2082:	80 83       	st	Z, r24
    2084:	a1 c2       	rjmp	.+1346   	; 0x25c8 <LCD_send_one_letter+0xe84>
	_delay_ms(1);

	_delay_ms(5);
	}
	else if(y==second_row)
    2086:	fe 01       	movw	r30, r28
    2088:	e4 56       	subi	r30, 0x64	; 100
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	80 81       	ld	r24, Z
    208e:	82 30       	cpi	r24, 0x02	; 2
    2090:	09 f0       	breq	.+2      	; 0x2094 <LCD_send_one_letter+0x950>
    2092:	9a c2       	rjmp	.+1332   	; 0x25c8 <LCD_send_one_letter+0xe84>
	{
		LCD_send_command(0xc0+x-1);
    2094:	fe 01       	movw	r30, r28
    2096:	e3 56       	subi	r30, 0x63	; 99
    2098:	ff 4f       	sbci	r31, 0xFF	; 255
    209a:	80 81       	ld	r24, Z
    209c:	81 54       	subi	r24, 0x41	; 65
    209e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <LCD_send_command>
    20a2:	fe 01       	movw	r30, r28
    20a4:	ed 5b       	subi	r30, 0xBD	; 189
    20a6:	ff 4f       	sbci	r31, 0xFF	; 255
    20a8:	80 e0       	ldi	r24, 0x00	; 0
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	a0 e8       	ldi	r26, 0x80	; 128
    20ae:	bf e3       	ldi	r27, 0x3F	; 63
    20b0:	80 83       	st	Z, r24
    20b2:	91 83       	std	Z+1, r25	; 0x01
    20b4:	a2 83       	std	Z+2, r26	; 0x02
    20b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20b8:	8e 01       	movw	r16, r28
    20ba:	01 5c       	subi	r16, 0xC1	; 193
    20bc:	1f 4f       	sbci	r17, 0xFF	; 255
    20be:	fe 01       	movw	r30, r28
    20c0:	ed 5b       	subi	r30, 0xBD	; 189
    20c2:	ff 4f       	sbci	r31, 0xFF	; 255
    20c4:	60 81       	ld	r22, Z
    20c6:	71 81       	ldd	r23, Z+1	; 0x01
    20c8:	82 81       	ldd	r24, Z+2	; 0x02
    20ca:	93 81       	ldd	r25, Z+3	; 0x03
    20cc:	20 e0       	ldi	r18, 0x00	; 0
    20ce:	30 e0       	ldi	r19, 0x00	; 0
    20d0:	48 e4       	ldi	r20, 0x48	; 72
    20d2:	53 e4       	ldi	r21, 0x43	; 67
    20d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20d8:	dc 01       	movw	r26, r24
    20da:	cb 01       	movw	r24, r22
    20dc:	f8 01       	movw	r30, r16
    20de:	80 83       	st	Z, r24
    20e0:	91 83       	std	Z+1, r25	; 0x01
    20e2:	a2 83       	std	Z+2, r26	; 0x02
    20e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20e6:	fe 01       	movw	r30, r28
    20e8:	ff 96       	adiw	r30, 0x3f	; 63
    20ea:	60 81       	ld	r22, Z
    20ec:	71 81       	ldd	r23, Z+1	; 0x01
    20ee:	82 81       	ldd	r24, Z+2	; 0x02
    20f0:	93 81       	ldd	r25, Z+3	; 0x03
    20f2:	20 e0       	ldi	r18, 0x00	; 0
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	40 e8       	ldi	r20, 0x80	; 128
    20f8:	5f e3       	ldi	r21, 0x3F	; 63
    20fa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20fe:	88 23       	and	r24, r24
    2100:	2c f4       	brge	.+10     	; 0x210c <LCD_send_one_letter+0x9c8>
		__ticks = 1;
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	9e af       	std	Y+62, r25	; 0x3e
    2108:	8d af       	std	Y+61, r24	; 0x3d
    210a:	46 c0       	rjmp	.+140    	; 0x2198 <LCD_send_one_letter+0xa54>
	else if (__tmp > 65535)
    210c:	fe 01       	movw	r30, r28
    210e:	ff 96       	adiw	r30, 0x3f	; 63
    2110:	60 81       	ld	r22, Z
    2112:	71 81       	ldd	r23, Z+1	; 0x01
    2114:	82 81       	ldd	r24, Z+2	; 0x02
    2116:	93 81       	ldd	r25, Z+3	; 0x03
    2118:	20 e0       	ldi	r18, 0x00	; 0
    211a:	3f ef       	ldi	r19, 0xFF	; 255
    211c:	4f e7       	ldi	r20, 0x7F	; 127
    211e:	57 e4       	ldi	r21, 0x47	; 71
    2120:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2124:	18 16       	cp	r1, r24
    2126:	64 f5       	brge	.+88     	; 0x2180 <LCD_send_one_letter+0xa3c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2128:	fe 01       	movw	r30, r28
    212a:	ed 5b       	subi	r30, 0xBD	; 189
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	60 81       	ld	r22, Z
    2130:	71 81       	ldd	r23, Z+1	; 0x01
    2132:	82 81       	ldd	r24, Z+2	; 0x02
    2134:	93 81       	ldd	r25, Z+3	; 0x03
    2136:	20 e0       	ldi	r18, 0x00	; 0
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	40 e2       	ldi	r20, 0x20	; 32
    213c:	51 e4       	ldi	r21, 0x41	; 65
    213e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2142:	dc 01       	movw	r26, r24
    2144:	cb 01       	movw	r24, r22
    2146:	bc 01       	movw	r22, r24
    2148:	cd 01       	movw	r24, r26
    214a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    214e:	dc 01       	movw	r26, r24
    2150:	cb 01       	movw	r24, r22
    2152:	9e af       	std	Y+62, r25	; 0x3e
    2154:	8d af       	std	Y+61, r24	; 0x3d
    2156:	0f c0       	rjmp	.+30     	; 0x2176 <LCD_send_one_letter+0xa32>
    2158:	84 e1       	ldi	r24, 0x14	; 20
    215a:	90 e0       	ldi	r25, 0x00	; 0
    215c:	9c af       	std	Y+60, r25	; 0x3c
    215e:	8b af       	std	Y+59, r24	; 0x3b
    2160:	8b ad       	ldd	r24, Y+59	; 0x3b
    2162:	9c ad       	ldd	r25, Y+60	; 0x3c
    2164:	01 97       	sbiw	r24, 0x01	; 1
    2166:	f1 f7       	brne	.-4      	; 0x2164 <LCD_send_one_letter+0xa20>
    2168:	9c af       	std	Y+60, r25	; 0x3c
    216a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    216c:	8d ad       	ldd	r24, Y+61	; 0x3d
    216e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2170:	01 97       	sbiw	r24, 0x01	; 1
    2172:	9e af       	std	Y+62, r25	; 0x3e
    2174:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2176:	8d ad       	ldd	r24, Y+61	; 0x3d
    2178:	9e ad       	ldd	r25, Y+62	; 0x3e
    217a:	00 97       	sbiw	r24, 0x00	; 0
    217c:	69 f7       	brne	.-38     	; 0x2158 <LCD_send_one_letter+0xa14>
    217e:	16 c0       	rjmp	.+44     	; 0x21ac <LCD_send_one_letter+0xa68>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2180:	fe 01       	movw	r30, r28
    2182:	ff 96       	adiw	r30, 0x3f	; 63
    2184:	60 81       	ld	r22, Z
    2186:	71 81       	ldd	r23, Z+1	; 0x01
    2188:	82 81       	ldd	r24, Z+2	; 0x02
    218a:	93 81       	ldd	r25, Z+3	; 0x03
    218c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2190:	dc 01       	movw	r26, r24
    2192:	cb 01       	movw	r24, r22
    2194:	9e af       	std	Y+62, r25	; 0x3e
    2196:	8d af       	std	Y+61, r24	; 0x3d
    2198:	8d ad       	ldd	r24, Y+61	; 0x3d
    219a:	9e ad       	ldd	r25, Y+62	; 0x3e
    219c:	9a af       	std	Y+58, r25	; 0x3a
    219e:	89 af       	std	Y+57, r24	; 0x39
    21a0:	89 ad       	ldd	r24, Y+57	; 0x39
    21a2:	9a ad       	ldd	r25, Y+58	; 0x3a
    21a4:	01 97       	sbiw	r24, 0x01	; 1
    21a6:	f1 f7       	brne	.-4      	; 0x21a4 <LCD_send_one_letter+0xa60>
    21a8:	9a af       	std	Y+58, r25	; 0x3a
    21aa:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1);

			PORTC|=(1<<6);
    21ac:	a5 e3       	ldi	r26, 0x35	; 53
    21ae:	b0 e0       	ldi	r27, 0x00	; 0
    21b0:	e5 e3       	ldi	r30, 0x35	; 53
    21b2:	f0 e0       	ldi	r31, 0x00	; 0
    21b4:	80 81       	ld	r24, Z
    21b6:	80 64       	ori	r24, 0x40	; 64
    21b8:	8c 93       	st	X, r24
			PORTB=(PORTB&0x0f)|(0xf0&data);
    21ba:	a8 e3       	ldi	r26, 0x38	; 56
    21bc:	b0 e0       	ldi	r27, 0x00	; 0
    21be:	e8 e3       	ldi	r30, 0x38	; 56
    21c0:	f0 e0       	ldi	r31, 0x00	; 0
    21c2:	80 81       	ld	r24, Z
    21c4:	98 2f       	mov	r25, r24
    21c6:	9f 70       	andi	r25, 0x0F	; 15
    21c8:	fe 01       	movw	r30, r28
    21ca:	e5 56       	subi	r30, 0x65	; 101
    21cc:	ff 4f       	sbci	r31, 0xFF	; 255
    21ce:	80 81       	ld	r24, Z
    21d0:	80 7f       	andi	r24, 0xF0	; 240
    21d2:	89 2b       	or	r24, r25
    21d4:	8c 93       	st	X, r24
			PORTC|=(1<<7);
    21d6:	a5 e3       	ldi	r26, 0x35	; 53
    21d8:	b0 e0       	ldi	r27, 0x00	; 0
    21da:	e5 e3       	ldi	r30, 0x35	; 53
    21dc:	f0 e0       	ldi	r31, 0x00	; 0
    21de:	80 81       	ld	r24, Z
    21e0:	80 68       	ori	r24, 0x80	; 128
    21e2:	8c 93       	st	X, r24
    21e4:	80 e0       	ldi	r24, 0x00	; 0
    21e6:	90 e0       	ldi	r25, 0x00	; 0
    21e8:	a0 e8       	ldi	r26, 0x80	; 128
    21ea:	bf e3       	ldi	r27, 0x3F	; 63
    21ec:	8d ab       	std	Y+53, r24	; 0x35
    21ee:	9e ab       	std	Y+54, r25	; 0x36
    21f0:	af ab       	std	Y+55, r26	; 0x37
    21f2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21f4:	6d a9       	ldd	r22, Y+53	; 0x35
    21f6:	7e a9       	ldd	r23, Y+54	; 0x36
    21f8:	8f a9       	ldd	r24, Y+55	; 0x37
    21fa:	98 ad       	ldd	r25, Y+56	; 0x38
    21fc:	20 e0       	ldi	r18, 0x00	; 0
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	48 e4       	ldi	r20, 0x48	; 72
    2202:	53 e4       	ldi	r21, 0x43	; 67
    2204:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2208:	dc 01       	movw	r26, r24
    220a:	cb 01       	movw	r24, r22
    220c:	89 ab       	std	Y+49, r24	; 0x31
    220e:	9a ab       	std	Y+50, r25	; 0x32
    2210:	ab ab       	std	Y+51, r26	; 0x33
    2212:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2214:	69 a9       	ldd	r22, Y+49	; 0x31
    2216:	7a a9       	ldd	r23, Y+50	; 0x32
    2218:	8b a9       	ldd	r24, Y+51	; 0x33
    221a:	9c a9       	ldd	r25, Y+52	; 0x34
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	40 e8       	ldi	r20, 0x80	; 128
    2222:	5f e3       	ldi	r21, 0x3F	; 63
    2224:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2228:	88 23       	and	r24, r24
    222a:	2c f4       	brge	.+10     	; 0x2236 <LCD_send_one_letter+0xaf2>
		__ticks = 1;
    222c:	81 e0       	ldi	r24, 0x01	; 1
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	98 ab       	std	Y+48, r25	; 0x30
    2232:	8f a7       	std	Y+47, r24	; 0x2f
    2234:	3f c0       	rjmp	.+126    	; 0x22b4 <LCD_send_one_letter+0xb70>
	else if (__tmp > 65535)
    2236:	69 a9       	ldd	r22, Y+49	; 0x31
    2238:	7a a9       	ldd	r23, Y+50	; 0x32
    223a:	8b a9       	ldd	r24, Y+51	; 0x33
    223c:	9c a9       	ldd	r25, Y+52	; 0x34
    223e:	20 e0       	ldi	r18, 0x00	; 0
    2240:	3f ef       	ldi	r19, 0xFF	; 255
    2242:	4f e7       	ldi	r20, 0x7F	; 127
    2244:	57 e4       	ldi	r21, 0x47	; 71
    2246:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    224a:	18 16       	cp	r1, r24
    224c:	4c f5       	brge	.+82     	; 0x22a0 <LCD_send_one_letter+0xb5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    224e:	6d a9       	ldd	r22, Y+53	; 0x35
    2250:	7e a9       	ldd	r23, Y+54	; 0x36
    2252:	8f a9       	ldd	r24, Y+55	; 0x37
    2254:	98 ad       	ldd	r25, Y+56	; 0x38
    2256:	20 e0       	ldi	r18, 0x00	; 0
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	40 e2       	ldi	r20, 0x20	; 32
    225c:	51 e4       	ldi	r21, 0x41	; 65
    225e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	bc 01       	movw	r22, r24
    2268:	cd 01       	movw	r24, r26
    226a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    226e:	dc 01       	movw	r26, r24
    2270:	cb 01       	movw	r24, r22
    2272:	98 ab       	std	Y+48, r25	; 0x30
    2274:	8f a7       	std	Y+47, r24	; 0x2f
    2276:	0f c0       	rjmp	.+30     	; 0x2296 <LCD_send_one_letter+0xb52>
    2278:	84 e1       	ldi	r24, 0x14	; 20
    227a:	90 e0       	ldi	r25, 0x00	; 0
    227c:	9e a7       	std	Y+46, r25	; 0x2e
    227e:	8d a7       	std	Y+45, r24	; 0x2d
    2280:	8d a5       	ldd	r24, Y+45	; 0x2d
    2282:	9e a5       	ldd	r25, Y+46	; 0x2e
    2284:	01 97       	sbiw	r24, 0x01	; 1
    2286:	f1 f7       	brne	.-4      	; 0x2284 <LCD_send_one_letter+0xb40>
    2288:	9e a7       	std	Y+46, r25	; 0x2e
    228a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    228c:	8f a5       	ldd	r24, Y+47	; 0x2f
    228e:	98 a9       	ldd	r25, Y+48	; 0x30
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	98 ab       	std	Y+48, r25	; 0x30
    2294:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2296:	8f a5       	ldd	r24, Y+47	; 0x2f
    2298:	98 a9       	ldd	r25, Y+48	; 0x30
    229a:	00 97       	sbiw	r24, 0x00	; 0
    229c:	69 f7       	brne	.-38     	; 0x2278 <LCD_send_one_letter+0xb34>
    229e:	14 c0       	rjmp	.+40     	; 0x22c8 <LCD_send_one_letter+0xb84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22a0:	69 a9       	ldd	r22, Y+49	; 0x31
    22a2:	7a a9       	ldd	r23, Y+50	; 0x32
    22a4:	8b a9       	ldd	r24, Y+51	; 0x33
    22a6:	9c a9       	ldd	r25, Y+52	; 0x34
    22a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22ac:	dc 01       	movw	r26, r24
    22ae:	cb 01       	movw	r24, r22
    22b0:	98 ab       	std	Y+48, r25	; 0x30
    22b2:	8f a7       	std	Y+47, r24	; 0x2f
    22b4:	8f a5       	ldd	r24, Y+47	; 0x2f
    22b6:	98 a9       	ldd	r25, Y+48	; 0x30
    22b8:	9c a7       	std	Y+44, r25	; 0x2c
    22ba:	8b a7       	std	Y+43, r24	; 0x2b
    22bc:	8b a5       	ldd	r24, Y+43	; 0x2b
    22be:	9c a5       	ldd	r25, Y+44	; 0x2c
    22c0:	01 97       	sbiw	r24, 0x01	; 1
    22c2:	f1 f7       	brne	.-4      	; 0x22c0 <LCD_send_one_letter+0xb7c>
    22c4:	9c a7       	std	Y+44, r25	; 0x2c
    22c6:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(1);
			PORTC&=~(1<<7);
    22c8:	a5 e3       	ldi	r26, 0x35	; 53
    22ca:	b0 e0       	ldi	r27, 0x00	; 0
    22cc:	e5 e3       	ldi	r30, 0x35	; 53
    22ce:	f0 e0       	ldi	r31, 0x00	; 0
    22d0:	80 81       	ld	r24, Z
    22d2:	8f 77       	andi	r24, 0x7F	; 127
    22d4:	8c 93       	st	X, r24
    22d6:	80 e0       	ldi	r24, 0x00	; 0
    22d8:	90 e0       	ldi	r25, 0x00	; 0
    22da:	a0 e8       	ldi	r26, 0x80	; 128
    22dc:	bf e3       	ldi	r27, 0x3F	; 63
    22de:	8f a3       	std	Y+39, r24	; 0x27
    22e0:	98 a7       	std	Y+40, r25	; 0x28
    22e2:	a9 a7       	std	Y+41, r26	; 0x29
    22e4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22e6:	6f a1       	ldd	r22, Y+39	; 0x27
    22e8:	78 a5       	ldd	r23, Y+40	; 0x28
    22ea:	89 a5       	ldd	r24, Y+41	; 0x29
    22ec:	9a a5       	ldd	r25, Y+42	; 0x2a
    22ee:	20 e0       	ldi	r18, 0x00	; 0
    22f0:	30 e0       	ldi	r19, 0x00	; 0
    22f2:	48 e4       	ldi	r20, 0x48	; 72
    22f4:	53 e4       	ldi	r21, 0x43	; 67
    22f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22fa:	dc 01       	movw	r26, r24
    22fc:	cb 01       	movw	r24, r22
    22fe:	8b a3       	std	Y+35, r24	; 0x23
    2300:	9c a3       	std	Y+36, r25	; 0x24
    2302:	ad a3       	std	Y+37, r26	; 0x25
    2304:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2306:	6b a1       	ldd	r22, Y+35	; 0x23
    2308:	7c a1       	ldd	r23, Y+36	; 0x24
    230a:	8d a1       	ldd	r24, Y+37	; 0x25
    230c:	9e a1       	ldd	r25, Y+38	; 0x26
    230e:	20 e0       	ldi	r18, 0x00	; 0
    2310:	30 e0       	ldi	r19, 0x00	; 0
    2312:	40 e8       	ldi	r20, 0x80	; 128
    2314:	5f e3       	ldi	r21, 0x3F	; 63
    2316:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    231a:	88 23       	and	r24, r24
    231c:	2c f4       	brge	.+10     	; 0x2328 <LCD_send_one_letter+0xbe4>
		__ticks = 1;
    231e:	81 e0       	ldi	r24, 0x01	; 1
    2320:	90 e0       	ldi	r25, 0x00	; 0
    2322:	9a a3       	std	Y+34, r25	; 0x22
    2324:	89 a3       	std	Y+33, r24	; 0x21
    2326:	3f c0       	rjmp	.+126    	; 0x23a6 <LCD_send_one_letter+0xc62>
	else if (__tmp > 65535)
    2328:	6b a1       	ldd	r22, Y+35	; 0x23
    232a:	7c a1       	ldd	r23, Y+36	; 0x24
    232c:	8d a1       	ldd	r24, Y+37	; 0x25
    232e:	9e a1       	ldd	r25, Y+38	; 0x26
    2330:	20 e0       	ldi	r18, 0x00	; 0
    2332:	3f ef       	ldi	r19, 0xFF	; 255
    2334:	4f e7       	ldi	r20, 0x7F	; 127
    2336:	57 e4       	ldi	r21, 0x47	; 71
    2338:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    233c:	18 16       	cp	r1, r24
    233e:	4c f5       	brge	.+82     	; 0x2392 <LCD_send_one_letter+0xc4e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2340:	6f a1       	ldd	r22, Y+39	; 0x27
    2342:	78 a5       	ldd	r23, Y+40	; 0x28
    2344:	89 a5       	ldd	r24, Y+41	; 0x29
    2346:	9a a5       	ldd	r25, Y+42	; 0x2a
    2348:	20 e0       	ldi	r18, 0x00	; 0
    234a:	30 e0       	ldi	r19, 0x00	; 0
    234c:	40 e2       	ldi	r20, 0x20	; 32
    234e:	51 e4       	ldi	r21, 0x41	; 65
    2350:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2354:	dc 01       	movw	r26, r24
    2356:	cb 01       	movw	r24, r22
    2358:	bc 01       	movw	r22, r24
    235a:	cd 01       	movw	r24, r26
    235c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2360:	dc 01       	movw	r26, r24
    2362:	cb 01       	movw	r24, r22
    2364:	9a a3       	std	Y+34, r25	; 0x22
    2366:	89 a3       	std	Y+33, r24	; 0x21
    2368:	0f c0       	rjmp	.+30     	; 0x2388 <LCD_send_one_letter+0xc44>
    236a:	84 e1       	ldi	r24, 0x14	; 20
    236c:	90 e0       	ldi	r25, 0x00	; 0
    236e:	98 a3       	std	Y+32, r25	; 0x20
    2370:	8f 8f       	std	Y+31, r24	; 0x1f
    2372:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2374:	98 a1       	ldd	r25, Y+32	; 0x20
    2376:	01 97       	sbiw	r24, 0x01	; 1
    2378:	f1 f7       	brne	.-4      	; 0x2376 <LCD_send_one_letter+0xc32>
    237a:	98 a3       	std	Y+32, r25	; 0x20
    237c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    237e:	89 a1       	ldd	r24, Y+33	; 0x21
    2380:	9a a1       	ldd	r25, Y+34	; 0x22
    2382:	01 97       	sbiw	r24, 0x01	; 1
    2384:	9a a3       	std	Y+34, r25	; 0x22
    2386:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2388:	89 a1       	ldd	r24, Y+33	; 0x21
    238a:	9a a1       	ldd	r25, Y+34	; 0x22
    238c:	00 97       	sbiw	r24, 0x00	; 0
    238e:	69 f7       	brne	.-38     	; 0x236a <LCD_send_one_letter+0xc26>
    2390:	14 c0       	rjmp	.+40     	; 0x23ba <LCD_send_one_letter+0xc76>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2392:	6b a1       	ldd	r22, Y+35	; 0x23
    2394:	7c a1       	ldd	r23, Y+36	; 0x24
    2396:	8d a1       	ldd	r24, Y+37	; 0x25
    2398:	9e a1       	ldd	r25, Y+38	; 0x26
    239a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    239e:	dc 01       	movw	r26, r24
    23a0:	cb 01       	movw	r24, r22
    23a2:	9a a3       	std	Y+34, r25	; 0x22
    23a4:	89 a3       	std	Y+33, r24	; 0x21
    23a6:	89 a1       	ldd	r24, Y+33	; 0x21
    23a8:	9a a1       	ldd	r25, Y+34	; 0x22
    23aa:	9e 8f       	std	Y+30, r25	; 0x1e
    23ac:	8d 8f       	std	Y+29, r24	; 0x1d
    23ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    23b0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    23b2:	01 97       	sbiw	r24, 0x01	; 1
    23b4:	f1 f7       	brne	.-4      	; 0x23b2 <LCD_send_one_letter+0xc6e>
    23b6:	9e 8f       	std	Y+30, r25	; 0x1e
    23b8:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(1);

			PORTB=(PORTB&0x0f)|(data<<4);
    23ba:	a8 e3       	ldi	r26, 0x38	; 56
    23bc:	b0 e0       	ldi	r27, 0x00	; 0
    23be:	e8 e3       	ldi	r30, 0x38	; 56
    23c0:	f0 e0       	ldi	r31, 0x00	; 0
    23c2:	80 81       	ld	r24, Z
    23c4:	28 2f       	mov	r18, r24
    23c6:	2f 70       	andi	r18, 0x0F	; 15
    23c8:	fe 01       	movw	r30, r28
    23ca:	e5 56       	subi	r30, 0x65	; 101
    23cc:	ff 4f       	sbci	r31, 0xFF	; 255
    23ce:	80 81       	ld	r24, Z
    23d0:	88 2f       	mov	r24, r24
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	82 95       	swap	r24
    23d6:	92 95       	swap	r25
    23d8:	90 7f       	andi	r25, 0xF0	; 240
    23da:	98 27       	eor	r25, r24
    23dc:	80 7f       	andi	r24, 0xF0	; 240
    23de:	98 27       	eor	r25, r24
    23e0:	82 2b       	or	r24, r18
    23e2:	8c 93       	st	X, r24
			PORTC|=(1<<7);
    23e4:	a5 e3       	ldi	r26, 0x35	; 53
    23e6:	b0 e0       	ldi	r27, 0x00	; 0
    23e8:	e5 e3       	ldi	r30, 0x35	; 53
    23ea:	f0 e0       	ldi	r31, 0x00	; 0
    23ec:	80 81       	ld	r24, Z
    23ee:	80 68       	ori	r24, 0x80	; 128
    23f0:	8c 93       	st	X, r24
    23f2:	80 e0       	ldi	r24, 0x00	; 0
    23f4:	90 e0       	ldi	r25, 0x00	; 0
    23f6:	a0 e8       	ldi	r26, 0x80	; 128
    23f8:	bf e3       	ldi	r27, 0x3F	; 63
    23fa:	89 8f       	std	Y+25, r24	; 0x19
    23fc:	9a 8f       	std	Y+26, r25	; 0x1a
    23fe:	ab 8f       	std	Y+27, r26	; 0x1b
    2400:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2402:	69 8d       	ldd	r22, Y+25	; 0x19
    2404:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2406:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2408:	9c 8d       	ldd	r25, Y+28	; 0x1c
    240a:	20 e0       	ldi	r18, 0x00	; 0
    240c:	30 e0       	ldi	r19, 0x00	; 0
    240e:	48 e4       	ldi	r20, 0x48	; 72
    2410:	53 e4       	ldi	r21, 0x43	; 67
    2412:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2416:	dc 01       	movw	r26, r24
    2418:	cb 01       	movw	r24, r22
    241a:	8d 8b       	std	Y+21, r24	; 0x15
    241c:	9e 8b       	std	Y+22, r25	; 0x16
    241e:	af 8b       	std	Y+23, r26	; 0x17
    2420:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2422:	6d 89       	ldd	r22, Y+21	; 0x15
    2424:	7e 89       	ldd	r23, Y+22	; 0x16
    2426:	8f 89       	ldd	r24, Y+23	; 0x17
    2428:	98 8d       	ldd	r25, Y+24	; 0x18
    242a:	20 e0       	ldi	r18, 0x00	; 0
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	40 e8       	ldi	r20, 0x80	; 128
    2430:	5f e3       	ldi	r21, 0x3F	; 63
    2432:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2436:	88 23       	and	r24, r24
    2438:	2c f4       	brge	.+10     	; 0x2444 <LCD_send_one_letter+0xd00>
		__ticks = 1;
    243a:	81 e0       	ldi	r24, 0x01	; 1
    243c:	90 e0       	ldi	r25, 0x00	; 0
    243e:	9c 8b       	std	Y+20, r25	; 0x14
    2440:	8b 8b       	std	Y+19, r24	; 0x13
    2442:	3f c0       	rjmp	.+126    	; 0x24c2 <LCD_send_one_letter+0xd7e>
	else if (__tmp > 65535)
    2444:	6d 89       	ldd	r22, Y+21	; 0x15
    2446:	7e 89       	ldd	r23, Y+22	; 0x16
    2448:	8f 89       	ldd	r24, Y+23	; 0x17
    244a:	98 8d       	ldd	r25, Y+24	; 0x18
    244c:	20 e0       	ldi	r18, 0x00	; 0
    244e:	3f ef       	ldi	r19, 0xFF	; 255
    2450:	4f e7       	ldi	r20, 0x7F	; 127
    2452:	57 e4       	ldi	r21, 0x47	; 71
    2454:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2458:	18 16       	cp	r1, r24
    245a:	4c f5       	brge	.+82     	; 0x24ae <LCD_send_one_letter+0xd6a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    245c:	69 8d       	ldd	r22, Y+25	; 0x19
    245e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2460:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2462:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2464:	20 e0       	ldi	r18, 0x00	; 0
    2466:	30 e0       	ldi	r19, 0x00	; 0
    2468:	40 e2       	ldi	r20, 0x20	; 32
    246a:	51 e4       	ldi	r21, 0x41	; 65
    246c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2470:	dc 01       	movw	r26, r24
    2472:	cb 01       	movw	r24, r22
    2474:	bc 01       	movw	r22, r24
    2476:	cd 01       	movw	r24, r26
    2478:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    247c:	dc 01       	movw	r26, r24
    247e:	cb 01       	movw	r24, r22
    2480:	9c 8b       	std	Y+20, r25	; 0x14
    2482:	8b 8b       	std	Y+19, r24	; 0x13
    2484:	0f c0       	rjmp	.+30     	; 0x24a4 <LCD_send_one_letter+0xd60>
    2486:	84 e1       	ldi	r24, 0x14	; 20
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	9a 8b       	std	Y+18, r25	; 0x12
    248c:	89 8b       	std	Y+17, r24	; 0x11
    248e:	89 89       	ldd	r24, Y+17	; 0x11
    2490:	9a 89       	ldd	r25, Y+18	; 0x12
    2492:	01 97       	sbiw	r24, 0x01	; 1
    2494:	f1 f7       	brne	.-4      	; 0x2492 <LCD_send_one_letter+0xd4e>
    2496:	9a 8b       	std	Y+18, r25	; 0x12
    2498:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    249a:	8b 89       	ldd	r24, Y+19	; 0x13
    249c:	9c 89       	ldd	r25, Y+20	; 0x14
    249e:	01 97       	sbiw	r24, 0x01	; 1
    24a0:	9c 8b       	std	Y+20, r25	; 0x14
    24a2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24a4:	8b 89       	ldd	r24, Y+19	; 0x13
    24a6:	9c 89       	ldd	r25, Y+20	; 0x14
    24a8:	00 97       	sbiw	r24, 0x00	; 0
    24aa:	69 f7       	brne	.-38     	; 0x2486 <LCD_send_one_letter+0xd42>
    24ac:	14 c0       	rjmp	.+40     	; 0x24d6 <LCD_send_one_letter+0xd92>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24ae:	6d 89       	ldd	r22, Y+21	; 0x15
    24b0:	7e 89       	ldd	r23, Y+22	; 0x16
    24b2:	8f 89       	ldd	r24, Y+23	; 0x17
    24b4:	98 8d       	ldd	r25, Y+24	; 0x18
    24b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24ba:	dc 01       	movw	r26, r24
    24bc:	cb 01       	movw	r24, r22
    24be:	9c 8b       	std	Y+20, r25	; 0x14
    24c0:	8b 8b       	std	Y+19, r24	; 0x13
    24c2:	8b 89       	ldd	r24, Y+19	; 0x13
    24c4:	9c 89       	ldd	r25, Y+20	; 0x14
    24c6:	98 8b       	std	Y+16, r25	; 0x10
    24c8:	8f 87       	std	Y+15, r24	; 0x0f
    24ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    24cc:	98 89       	ldd	r25, Y+16	; 0x10
    24ce:	01 97       	sbiw	r24, 0x01	; 1
    24d0:	f1 f7       	brne	.-4      	; 0x24ce <LCD_send_one_letter+0xd8a>
    24d2:	98 8b       	std	Y+16, r25	; 0x10
    24d4:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(1);
			PORTC&=~(1<<7);
    24d6:	a5 e3       	ldi	r26, 0x35	; 53
    24d8:	b0 e0       	ldi	r27, 0x00	; 0
    24da:	e5 e3       	ldi	r30, 0x35	; 53
    24dc:	f0 e0       	ldi	r31, 0x00	; 0
    24de:	80 81       	ld	r24, Z
    24e0:	8f 77       	andi	r24, 0x7F	; 127
    24e2:	8c 93       	st	X, r24
    24e4:	80 e0       	ldi	r24, 0x00	; 0
    24e6:	90 e0       	ldi	r25, 0x00	; 0
    24e8:	a0 e8       	ldi	r26, 0x80	; 128
    24ea:	bf e3       	ldi	r27, 0x3F	; 63
    24ec:	8b 87       	std	Y+11, r24	; 0x0b
    24ee:	9c 87       	std	Y+12, r25	; 0x0c
    24f0:	ad 87       	std	Y+13, r26	; 0x0d
    24f2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    24f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    24f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    24fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    24fc:	20 e0       	ldi	r18, 0x00	; 0
    24fe:	30 e0       	ldi	r19, 0x00	; 0
    2500:	48 e4       	ldi	r20, 0x48	; 72
    2502:	53 e4       	ldi	r21, 0x43	; 67
    2504:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2508:	dc 01       	movw	r26, r24
    250a:	cb 01       	movw	r24, r22
    250c:	8f 83       	std	Y+7, r24	; 0x07
    250e:	98 87       	std	Y+8, r25	; 0x08
    2510:	a9 87       	std	Y+9, r26	; 0x09
    2512:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2514:	6f 81       	ldd	r22, Y+7	; 0x07
    2516:	78 85       	ldd	r23, Y+8	; 0x08
    2518:	89 85       	ldd	r24, Y+9	; 0x09
    251a:	9a 85       	ldd	r25, Y+10	; 0x0a
    251c:	20 e0       	ldi	r18, 0x00	; 0
    251e:	30 e0       	ldi	r19, 0x00	; 0
    2520:	40 e8       	ldi	r20, 0x80	; 128
    2522:	5f e3       	ldi	r21, 0x3F	; 63
    2524:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2528:	88 23       	and	r24, r24
    252a:	2c f4       	brge	.+10     	; 0x2536 <LCD_send_one_letter+0xdf2>
		__ticks = 1;
    252c:	81 e0       	ldi	r24, 0x01	; 1
    252e:	90 e0       	ldi	r25, 0x00	; 0
    2530:	9e 83       	std	Y+6, r25	; 0x06
    2532:	8d 83       	std	Y+5, r24	; 0x05
    2534:	3f c0       	rjmp	.+126    	; 0x25b4 <LCD_send_one_letter+0xe70>
	else if (__tmp > 65535)
    2536:	6f 81       	ldd	r22, Y+7	; 0x07
    2538:	78 85       	ldd	r23, Y+8	; 0x08
    253a:	89 85       	ldd	r24, Y+9	; 0x09
    253c:	9a 85       	ldd	r25, Y+10	; 0x0a
    253e:	20 e0       	ldi	r18, 0x00	; 0
    2540:	3f ef       	ldi	r19, 0xFF	; 255
    2542:	4f e7       	ldi	r20, 0x7F	; 127
    2544:	57 e4       	ldi	r21, 0x47	; 71
    2546:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    254a:	18 16       	cp	r1, r24
    254c:	4c f5       	brge	.+82     	; 0x25a0 <LCD_send_one_letter+0xe5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    254e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2550:	7c 85       	ldd	r23, Y+12	; 0x0c
    2552:	8d 85       	ldd	r24, Y+13	; 0x0d
    2554:	9e 85       	ldd	r25, Y+14	; 0x0e
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e2       	ldi	r20, 0x20	; 32
    255c:	51 e4       	ldi	r21, 0x41	; 65
    255e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2562:	dc 01       	movw	r26, r24
    2564:	cb 01       	movw	r24, r22
    2566:	bc 01       	movw	r22, r24
    2568:	cd 01       	movw	r24, r26
    256a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    256e:	dc 01       	movw	r26, r24
    2570:	cb 01       	movw	r24, r22
    2572:	9e 83       	std	Y+6, r25	; 0x06
    2574:	8d 83       	std	Y+5, r24	; 0x05
    2576:	0f c0       	rjmp	.+30     	; 0x2596 <LCD_send_one_letter+0xe52>
    2578:	84 e1       	ldi	r24, 0x14	; 20
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	9c 83       	std	Y+4, r25	; 0x04
    257e:	8b 83       	std	Y+3, r24	; 0x03
    2580:	8b 81       	ldd	r24, Y+3	; 0x03
    2582:	9c 81       	ldd	r25, Y+4	; 0x04
    2584:	01 97       	sbiw	r24, 0x01	; 1
    2586:	f1 f7       	brne	.-4      	; 0x2584 <LCD_send_one_letter+0xe40>
    2588:	9c 83       	std	Y+4, r25	; 0x04
    258a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    258c:	8d 81       	ldd	r24, Y+5	; 0x05
    258e:	9e 81       	ldd	r25, Y+6	; 0x06
    2590:	01 97       	sbiw	r24, 0x01	; 1
    2592:	9e 83       	std	Y+6, r25	; 0x06
    2594:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2596:	8d 81       	ldd	r24, Y+5	; 0x05
    2598:	9e 81       	ldd	r25, Y+6	; 0x06
    259a:	00 97       	sbiw	r24, 0x00	; 0
    259c:	69 f7       	brne	.-38     	; 0x2578 <LCD_send_one_letter+0xe34>
    259e:	14 c0       	rjmp	.+40     	; 0x25c8 <LCD_send_one_letter+0xe84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25a0:	6f 81       	ldd	r22, Y+7	; 0x07
    25a2:	78 85       	ldd	r23, Y+8	; 0x08
    25a4:	89 85       	ldd	r24, Y+9	; 0x09
    25a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25ac:	dc 01       	movw	r26, r24
    25ae:	cb 01       	movw	r24, r22
    25b0:	9e 83       	std	Y+6, r25	; 0x06
    25b2:	8d 83       	std	Y+5, r24	; 0x05
    25b4:	8d 81       	ldd	r24, Y+5	; 0x05
    25b6:	9e 81       	ldd	r25, Y+6	; 0x06
    25b8:	9a 83       	std	Y+2, r25	; 0x02
    25ba:	89 83       	std	Y+1, r24	; 0x01
    25bc:	89 81       	ldd	r24, Y+1	; 0x01
    25be:	9a 81       	ldd	r25, Y+2	; 0x02
    25c0:	01 97       	sbiw	r24, 0x01	; 1
    25c2:	f1 f7       	brne	.-4      	; 0x25c0 <LCD_send_one_letter+0xe7c>
    25c4:	9a 83       	std	Y+2, r25	; 0x02
    25c6:	89 83       	std	Y+1, r24	; 0x01
			    _delay_ms(1);
			    PORTC&=~(1<<7);
			    _delay_ms(1);
	}
#endif
}
    25c8:	c3 56       	subi	r28, 0x63	; 99
    25ca:	df 4f       	sbci	r29, 0xFF	; 255
    25cc:	0f b6       	in	r0, 0x3f	; 63
    25ce:	f8 94       	cli
    25d0:	de bf       	out	0x3e, r29	; 62
    25d2:	0f be       	out	0x3f, r0	; 63
    25d4:	cd bf       	out	0x3d, r28	; 61
    25d6:	cf 91       	pop	r28
    25d8:	df 91       	pop	r29
    25da:	1f 91       	pop	r17
    25dc:	0f 91       	pop	r16
    25de:	08 95       	ret

000025e0 <__prologue_saves__>:
    25e0:	2f 92       	push	r2
    25e2:	3f 92       	push	r3
    25e4:	4f 92       	push	r4
    25e6:	5f 92       	push	r5
    25e8:	6f 92       	push	r6
    25ea:	7f 92       	push	r7
    25ec:	8f 92       	push	r8
    25ee:	9f 92       	push	r9
    25f0:	af 92       	push	r10
    25f2:	bf 92       	push	r11
    25f4:	cf 92       	push	r12
    25f6:	df 92       	push	r13
    25f8:	ef 92       	push	r14
    25fa:	ff 92       	push	r15
    25fc:	0f 93       	push	r16
    25fe:	1f 93       	push	r17
    2600:	cf 93       	push	r28
    2602:	df 93       	push	r29
    2604:	cd b7       	in	r28, 0x3d	; 61
    2606:	de b7       	in	r29, 0x3e	; 62
    2608:	ca 1b       	sub	r28, r26
    260a:	db 0b       	sbc	r29, r27
    260c:	0f b6       	in	r0, 0x3f	; 63
    260e:	f8 94       	cli
    2610:	de bf       	out	0x3e, r29	; 62
    2612:	0f be       	out	0x3f, r0	; 63
    2614:	cd bf       	out	0x3d, r28	; 61
    2616:	09 94       	ijmp

00002618 <__epilogue_restores__>:
    2618:	2a 88       	ldd	r2, Y+18	; 0x12
    261a:	39 88       	ldd	r3, Y+17	; 0x11
    261c:	48 88       	ldd	r4, Y+16	; 0x10
    261e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2620:	6e 84       	ldd	r6, Y+14	; 0x0e
    2622:	7d 84       	ldd	r7, Y+13	; 0x0d
    2624:	8c 84       	ldd	r8, Y+12	; 0x0c
    2626:	9b 84       	ldd	r9, Y+11	; 0x0b
    2628:	aa 84       	ldd	r10, Y+10	; 0x0a
    262a:	b9 84       	ldd	r11, Y+9	; 0x09
    262c:	c8 84       	ldd	r12, Y+8	; 0x08
    262e:	df 80       	ldd	r13, Y+7	; 0x07
    2630:	ee 80       	ldd	r14, Y+6	; 0x06
    2632:	fd 80       	ldd	r15, Y+5	; 0x05
    2634:	0c 81       	ldd	r16, Y+4	; 0x04
    2636:	1b 81       	ldd	r17, Y+3	; 0x03
    2638:	aa 81       	ldd	r26, Y+2	; 0x02
    263a:	b9 81       	ldd	r27, Y+1	; 0x01
    263c:	ce 0f       	add	r28, r30
    263e:	d1 1d       	adc	r29, r1
    2640:	0f b6       	in	r0, 0x3f	; 63
    2642:	f8 94       	cli
    2644:	de bf       	out	0x3e, r29	; 62
    2646:	0f be       	out	0x3f, r0	; 63
    2648:	cd bf       	out	0x3d, r28	; 61
    264a:	ed 01       	movw	r28, r26
    264c:	08 95       	ret

0000264e <_exit>:
    264e:	f8 94       	cli

00002650 <__stop_program>:
    2650:	ff cf       	rjmp	.-2      	; 0x2650 <__stop_program>
